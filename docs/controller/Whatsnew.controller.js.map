{"version":3,"file":"Whatsnew.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Whatsnew","extend","onInit","async","_onInit","this","getView","setBusyIndicatorDelay","setBusy","getRouter","getRoute","attachEventOnce","onPatternMatchedOnce","whatsnewModel","JSONModel","whatsnewDataLoadled","loadData","setModel","selectModel","selectDataLoaded","_mViewSettingsDialogs","Promise","all","onNavBack","_onNavBack","navTo","_onPatternMatchedOnce","attachPatternMatched","onPatternMatched","getQueryParameter","_onPatternMatched","_getQueryParameter","data","getModel","getData","mParams","URLSearchParams","window","location","search","versionFrom","get","versionTo","versionExists","version","some","item","key","value","missingOrInvalid","push","length","MessageToast","show","join","byId","setSelectedKey","dataloadedPromise","handleVersionChange","copyLinkToClipboardWhatsnew","_copyLinkToClipboardWhatsnew","event","copyLinkToClipboard","_handleVersionChange","updateURLParameters","getSelectedKey","versionObject","compareVersions","majorFrom","minorFrom","split","map","Number","majorTo","minorTo","whatsnew","filteredData","filter","itemMajor","itemMinor","Version","setData","_compareVersions","v1","v2","v1Parts","v2Parts","i","handleSortButtonPressed","_handleSortButtonPressed","getViewSettingsDialog","then","oViewSettingsDialog","open","handleFilterButtonPressed","_handleFilterButtonPressed","handleSortDialogConfirm","_handleSortDialogConfirm","oEvent","oTable","getParameters","oBinding","getBinding","sPath","bDescending","aSorters","sortItem","getKey","sortDescending","Sorter","sort","handleFilterDialogConfirm","_handleFilterDialogConfirm","aFilters","filterItems","forEach","oItem","aSplit","sOperator","sValue1","sValue2","oFilter","Filter","setVisible","setText","filterString","_getViewSettingsDialog","sDialogFragmentName","pDialog","Fragment","load","id","getId","name","controller","oDialog","Device","system","desktop","addStyleClass","_updateURLParameters","set","delete","newURL","origin","pathname","toString","hash","history","replaceState"],"sources":["Whatsnew.controller.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\";\nimport BaseController from \"./BaseController\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Device from \"sap/ui/Device\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport Filter from \"sap/ui/model/Filter\";\nimport MessageToast from \"sap/m/MessageToast\";\n\n/**\n * @namespace de.marianzeis.ui5libdiff.controller\n */\nexport default class Whatsnew extends BaseController {\n\t_mViewSettingsDialogs: {};\n\tdataloadedPromise: Promise<void>;\n\twhatsnewDataLoadled: Promise<any>;\n\tselectDataLoaded: Promise<any>;\n\tpublic async onInit(): void {\n\t\tthis.getView().setBusyIndicatorDelay(0);\n\t\tthis.getView().setBusy(true);\n\t\tthis.getRouter()\n\t\t\t.getRoute(\"whatsnew\")\n\t\t\t.attachEventOnce(\"patternMatched\", this.onPatternMatchedOnce, this);\n\t\tconst whatsnewModel = new JSONModel();\n\t\tthis.whatsnewDataLoadled =  whatsnewModel.loadData(\"./data/whatsnew.json\");\n\t\tthis.getView().setModel(whatsnewModel, \"whatsnewData\");\n\t\tconst selectModel  = new JSONModel()\n\t\tthis.selectDataLoaded =  selectModel.loadData(\"./data/selectVersionsSAPUI5.json\");\n\t\tthis.getView().setModel(selectModel, \"select\");\n\t\tthis._mViewSettingsDialogs = {};\n\t\tthis.getView().setModel(new JSONModel(), \"whatsnew\");\n\t\tawait Promise.all([this.whatsnewDataLoadled, this.selectDataLoaded]);\n\t\tthis.getView().setBusy(false);\n\t}\n\n\tonNavBack(): void {\n\t\tthis.getRouter().navTo(\"main\");\n\t}\n\n\tonPatternMatchedOnce(): void {\n\t\tthis.getRouter()\n\t\t\t.getRoute(\"whatsnew\")\n\t\t\t.attachPatternMatched(this.onPatternMatched, this);\n\t\tthis.getQueryParameter();\n\t}\n\n\tonPatternMatched(): void {\n\t\tthis.getQueryParameter();\n\t}\n\n\t// get parameter versionFrom and versionTo from URL Parameters\n\tpublic async getQueryParameter(): void {\n\t\tawait Promise.all([this.whatsnewDataLoadled, this.selectDataLoaded]);\n\t\tconst data = this.getView().getModel(\"select\").getData();\n\t\tconst mParams = new URLSearchParams(window.location.search);\n\t\tconst versionFrom = mParams.get(\"versionFrom\");\n\t\tconst versionTo = mParams.get(\"versionTo\");\n\n\t\t// If both versionFrom and versionTo are null, exit the function\n\t\tif (versionFrom === null && versionTo === null) return;\n\n\t\t// Helper function to check if a version is in data and is not null\n\t\tconst versionExists = (version: string | null) =>\n\t\t\tversion &&\n\t\t\tdata.some((item) => item.key === version || item.value === version);\n\n\t\tconst missingOrInvalid = [];\n\n\t\tif (!versionFrom) {\n\t\t\tmissingOrInvalid.push(\"versionFrom should be added\");\n\t\t} else if (!versionExists(versionFrom)) {\n\t\t\tmissingOrInvalid.push(`versionFrom ${versionFrom} is not valid`);\n\t\t}\n\n\t\tif (!versionTo) {\n\t\t\tmissingOrInvalid.push(\"versionTo should be added\");\n\t\t} else if (!versionExists(versionTo)) {\n\t\t\tmissingOrInvalid.push(`versionTo ${versionTo} is not valid`);\n\t\t}\n\n\t\tif (missingOrInvalid.length > 0) {\n\t\t\tMessageToast.show(missingOrInvalid.join(\" and \"));\n\t\t} else {\n\t\t\tthis.getView().byId(\"versionFromSelect\").setSelectedKey(versionFrom!);\n\t\t\tthis.getView().byId(\"versionToSelect\").setSelectedKey(versionTo!);\n\t\t\tawait this.dataloadedPromise;\n\t\t\tthis.handleVersionChange();\n\t\t}\n\t}\n\n\tcopyLinkToClipboardWhatsnew(event: Event): void {\n\t\tthis.copyLinkToClipboard(event);\n\t}\n\n\thandleVersionChange() {\n\t\tthis.getView().setBusyIndicatorDelay(0);\n\t\tthis.getView().setBusy(true);\n\t\tthis.updateURLParameters();\n\t\t// Get the selected versions\n\t\tlet versionFrom = this.getView().byId(\"versionFromSelect\").getSelectedKey();\n\t\tlet versionTo = this.getView().byId(\"versionToSelect\").getSelectedKey();\n\t\tlet versionObject = this.compareVersions(versionFrom, versionTo);\n\t\tif (versionFrom && versionTo) {\n\t\t\tversionFrom = versionObject.versionFrom;\n\t\t\tversionTo = versionObject.versionTo;\n\n\t\t\t// Extract the major and minor version numbers\n\t\t\tconst [majorFrom, minorFrom] = versionFrom.split(\".\").map(Number);\n\t\t\tconst [majorTo, minorTo] = versionTo.split(\".\").map(Number);\n\n\t\t\t// Retrieve the data from the model\n\t\t\tconst whatsnew = this.getView().getModel(\"whatsnewData\").getData();\n\n\t\t\t// Filter the data based on the versions\n\t\t\tconst filteredData = whatsnew.filter((item) => {\n\t\t\t\tconst [itemMajor, itemMinor] = item.Version.split(\".\").map(Number);\n\n\t\t\t\t// Check if the version is within the selected range\n\t\t\t\treturn (\n\t\t\t\t\t(itemMajor > majorFrom ||\n\t\t\t\t\t\t(itemMajor === majorFrom && itemMinor >= minorFrom)) &&\n\t\t\t\t\t(itemMajor < majorTo ||\n\t\t\t\t\t\t(itemMajor === majorTo && itemMinor <= minorTo))\n\t\t\t\t);\n\t\t\t});\n\n\t\t\t// Update your model if necessary\n\t\t\tthis.getView().getModel(\"whatsnew\").setData(filteredData);\n\t\t\t\n\t\t}\n\t\tthis.getView().setBusy(false);\n\t}\n\n\tcompareVersions(\n\t\tv1: string,\n\t\tv2: string\n\t): { versionFrom: string; versionTo: string } {\n\t\tconst v1Parts = v1.split(\".\").map(Number);\n\t\tconst v2Parts = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < v1Parts.length; i++) {\n\t\t\tif (v1Parts[i] > v2Parts[i]) {\n\t\t\t\treturn {\n\t\t\t\t\tversionFrom: v2,\n\t\t\t\t\tversionTo: v1,\n\t\t\t\t};\n\t\t\t} else if (v1Parts[i] < v2Parts[i]) {\n\t\t\t\treturn {\n\t\t\t\t\tversionFrom: v1,\n\t\t\t\t\tversionTo: v2,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// If versions are equal, default to v1 as versionFrom and v2 as versionTo\n\t\treturn {\n\t\t\tversionFrom: v1,\n\t\t\tversionTo: v2,\n\t\t};\n\t}\n\n\thandleSortButtonPressed() {\n\t\tthis.getViewSettingsDialog(\n\t\t\t\"de.marianzeis.ui5libdiff.fragment.SortDialog\"\n\t\t).then(function (oViewSettingsDialog) {\n\t\t\toViewSettingsDialog.open();\n\t\t});\n\t}\n\n\thandleFilterButtonPressed() {\n\t\tthis.getViewSettingsDialog(\n\t\t\t\"de.marianzeis.ui5libdiff.fragment.FilterDialog\"\n\t\t).then(function (oViewSettingsDialog) {\n\t\t\toViewSettingsDialog.open();\n\t\t});\n\t}\n\n\thandleSortDialogConfirm(oEvent) {\n\t\tvar oTable = this.byId(\"idProductsTable\"),\n\t\t\tmParams = oEvent.getParameters(),\n\t\t\toBinding = oTable.getBinding(\"items\"),\n\t\t\tsPath,\n\t\t\tbDescending,\n\t\t\taSorters = [];\n\n\t\tsPath = mParams.sortItem.getKey();\n\t\tbDescending = mParams.sortDescending;\n\t\taSorters.push(new Sorter(sPath, bDescending));\n\n\t\t// apply the selected sort and group settings\n\t\toBinding.sort(aSorters);\n\t}\n\n\thandleFilterDialogConfirm(oEvent) {\n\t\tvar oTable = this.byId(\"idProductsTable\"),\n\t\t\tmParams = oEvent.getParameters(),\n\t\t\toBinding = oTable.getBinding(\"items\"),\n\t\t\taFilters = [];\n\n\t\tmParams.filterItems.forEach(function (oItem) {\n\t\t\tvar aSplit = oItem.getKey().split(\"___\"),\n\t\t\t\tsPath = aSplit[0],\n\t\t\t\tsOperator = aSplit[1],\n\t\t\t\tsValue1 = aSplit[2],\n\t\t\t\tsValue2 = aSplit[3],\n\t\t\t\toFilter = new Filter(sPath, sOperator, sValue1, sValue2);\n\t\t\taFilters.push(oFilter);\n\t\t});\n\n\t\t// apply filter settings\n\t\toBinding.filter(aFilters);\n\n\t\t// update filter bar\n\t\tthis.byId(\"vsdFilterBar\").setVisible(aFilters.length > 0);\n\t\tthis.byId(\"vsdFilterLabel\").setText(mParams.filterString);\n\t}\n\n\tgetViewSettingsDialog(sDialogFragmentName) {\n\t\tvar pDialog = this._mViewSettingsDialogs[sDialogFragmentName];\n\n\t\tif (!pDialog) {\n\t\t\tpDialog = Fragment.load({\n\t\t\t\tid: this.getView().getId(),\n\t\t\t\tname: sDialogFragmentName,\n\t\t\t\tcontroller: this,\n\t\t\t}).then(function (oDialog) {\n\t\t\t\tif (Device.system.desktop) {\n\t\t\t\t\toDialog.addStyleClass(\"sapUiSizeCompact\");\n\t\t\t\t}\n\t\t\t\treturn oDialog;\n\t\t\t});\n\t\t\tthis._mViewSettingsDialogs[sDialogFragmentName] = pDialog;\n\t\t}\n\t\treturn pDialog;\n\t}\n\tpublic updateURLParameters(): void {\n\t\t// Retrieve the selected keys from the controls\n\t\tconst versionTo = this.getView().byId(\"versionToSelect\").getSelectedKey();\n\t\tconst versionFrom = this.getView()\n\t\t\t.byId(\"versionFromSelect\")\n\t\t\t.getSelectedKey();\n\n\t\t// Get the current URL parameters\n\t\tconst mParams = new URLSearchParams(window.location.search);\n\n\t\t// Update only the versionTo and versionFrom parameters\n\t\tif (versionTo) {\n\t\t\tmParams.set(\"versionTo\", versionTo);\n\t\t} else {\n\t\t\tmParams.delete(\"versionTo\");\n\t\t}\n\n\t\tif (versionFrom) {\n\t\t\tmParams.set(\"versionFrom\", versionFrom);\n\t\t} else {\n\t\t\tmParams.delete(\"versionFrom\");\n\t\t}\n\n\t\t// Update the browser's URL without causing a page refresh, including the hash fragment\n\t\tconst newURL = `${window.location.origin}${\n\t\t\twindow.location.pathname\n\t\t}?${mParams.toString()}${window.location.hash}`;\n\t\twindow.history.replaceState({}, \"\", newURL);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}