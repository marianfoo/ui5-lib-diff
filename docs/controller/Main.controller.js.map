{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","constructor","prototype","apply","this","arguments","UI5Type","SAPUI5DataLoaded","OpenUI5DataLoaded","clipboardFormat","onInit","async","_onInit","getView","setBusyIndicatorDelay","setBusy","getRouter","getRoute","attachEventOnce","onPatternMatchedOnce","setModel","JSONModel","onFormatChange","_onFormatChange","event","selectedKey","getSource","getSelectedKey","triggerLoadingData","_triggerLoadingData","dataIsLoading","ui5TypeLoading","SAPUI5DataLoading","SAPUI5Model","dataLoaded","loadData","then","SAPUI5SelectModel","selectDataLoaded","OpenUI5DataLoading","OpenUI5Model","OpenUI5SelectModel","Promise","allSettled","_onPatternMatchedOnce","attachPatternMatched","onPatternMatched","getQueryParameter","_onPatternMatched","_getQueryParameter","mParams","URLSearchParams","window","location","search","versionFrom","get","versionTo","ui5Type","all","data","getModel","getData","findNearestVersion","targetVersion","versions","map","item","key","value","sort","a","b","compareVersionDesc","major","minor","split","slice","targetBase","compatibleVersions","filter","v","startsWith","find","compareVersion","finalVersionFrom","finalVersionTo","missingOrInvalid","push","some","nearest","MessageToast","show","length","join","byId","setSelectedKey","handleVersionChange","_handleVersionChange","updateURLParameters","versionObject","compareVersions","filterKey","changes","getMergedChangesBetweenVersions","setData","sayHello","_sayHello","MessageBox","_compareVersion","v1","v2","parts1","Number","parts2","i","sortChanges","_sortChanges","sortBy","type","text","console","warn","localeCompare","version","mergeLibraries","_mergeLibraries","libraryMap","Map","lib","libraries","changesWithVersion","change","existingChanges","library","set","concat","Array","from","entries","_ref","uniqueChanges","seenChanges","Set","changeString","JSON","stringify","url","commit_url","has","add","_getMergedChangesBetweenVersions","startVersion","endVersion","filterType","versionsInRange","obj","mergedLibraries","filteredChanges","_compareVersions","v1Parts","v2Parts","_compareVersionDesc","onNavToWhatsnew","_onNavToWhatsnew","navTo","_updateURLParameters","delete","newURL","origin","pathname","toString","history","pushState","copyLinkToClipboardMain","_copyLinkToClipboardMain","copyLinkToClipboard","showRSSFeedSAPUI5","_showRSSFeedSAPUI","open","showRSSFeedOpenUI5","_showRSSFeedOpenUI","openGitHubRepo","_openGitHubRepo","copyDataToClipboardMain","_copyDataToClipboardMain","changesData","isArray","output","forEach","libraryObj","commitLink","navigator","clipboard","writeText","dummyInput","document","createElement","body","appendChild","select","execCommand","removeChild","error"],"sources":["Main.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\nimport BaseController from \"./BaseController\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageToast from \"sap/m/MessageToast\";\n\ninterface Change {\n\ttype: \"FEATURE\" | \"FIX\" | \"DEPRECATED\";\n\ttext: string;\n\tversion?: string; // add this line to include an optional version property\n\tcommit_url?: string;\n}\n\ninterface Library {\n\tlibrary: string;\n\tchanges: Change[];\n}\n\ninterface Version {\n\tversion: string;\n\tlibraries: Library[];\n}\n\n/**\n * @namespace de.marianzeis.ui5libdiff.controller\n */\nexport default class Main extends BaseController {\n\tdataLoaded: Promise<any>;\n\tselectDataLoaded: Promise<any>;\n\tUI5Type: string = \"SAPUI5\";\n\tSAPUI5Model: JSONModel;\n\tSAPUI5SelectModel: JSONModel;\n\tOpenUI5Model: JSONModel;\n\tOpenUI5SelectModel: JSONModel;\n\tSAPUI5DataLoaded: boolean = false;\n\tOpenUI5DataLoaded: boolean = false;\n\tSAPUI5DataLoading: any;\n\tdataIsLoading: any;\n\tOpenUI5DataLoading: boolean;\n\tui5TypeLoading: string;\n\n\t// New property for storing the chosen clipboard format\n\tprivate clipboardFormat: \"TEXT\" | \"MARKDOWN\" | \"JSON\" = \"TEXT\";\n\n\tpublic async onInit(): void {\n\t\tthis.getView().setBusyIndicatorDelay(0);\n\t\tthis.getView().setBusy(true);\n\t\tthis.getRouter()\n\t\t\t.getRoute(\"main\")\n\t\t\t.attachEventOnce(\"patternMatched\", this.onPatternMatchedOnce, this);\n\t\tthis.getView().setModel(new JSONModel(), \"changes\");\n\t\tthis.getView().setModel(new JSONModel(), \"versionFrom\");\n\t\tthis.getView().setModel(new JSONModel(), \"versionTo\");\n\t\tthis.getView().setBusy(false);\n\t\tthis.clipboardFormat = \"TEXT\";\n\t}\n\n\t// Event handler for the new ComboBox\n\tpublic onFormatChange(event: any): void {\n\t\tconst selectedKey = event.getSource().getSelectedKey()\n\t\tthis.clipboardFormat = selectedKey;\n\t}\n\n\ttriggerLoadingData(UI5Type: string): void {\n\t\tif (this.dataIsLoading && this.ui5TypeLoading !== UI5Type) return;\n\t\tif (UI5Type === \"SAPUI5\" && !this.SAPUI5DataLoaded) {\n\t\t\tthis.ui5TypeLoading = \"SAPUI5\";\n\t\t\tthis.SAPUI5DataLoading = true;\n\t\t\tthis.SAPUI5Model = new JSONModel();\n\t\t\tthis.dataLoaded = this.SAPUI5Model.loadData(\n\t\t\t\t`./data/consolidated${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.dataLoaded.then(() => {\n\t\t\t\tthis.dataIsLoading = false;\n\t\t\t});\n\t\t\tthis.getView().setModel(this.SAPUI5Model, \"data\");\n\t\t\tthis.SAPUI5SelectModel = new JSONModel();\n\t\t\tthis.selectDataLoaded = this.SAPUI5SelectModel.loadData(\n\t\t\t\t`./data/selectVersions${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.getView().setModel(this.SAPUI5SelectModel, \"select\");\n\t\t\tthis.SAPUI5DataLoaded = true;\n\t\t}\n\t\tif (UI5Type === \"SAPUI5\" && this.SAPUI5DataLoaded) {\n\t\t\tthis.getView().setModel(this.SAPUI5Model, \"data\");\n\t\t\tthis.getView().setModel(this.SAPUI5SelectModel, \"select\");\n\t\t}\n\t\tif (UI5Type === \"OpenUI5\" && !this.OpenUI5DataLoaded) {\n\t\t\tthis.ui5TypeLoading = \"OpenUI5\";\n\t\t\tthis.OpenUI5DataLoading = true;\n\t\t\tthis.OpenUI5Model = new JSONModel();\n\t\t\tthis.dataLoaded = this.OpenUI5Model.loadData(\n\t\t\t\t`./data/consolidated${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.getView().setModel(this.OpenUI5Model, \"data\");\n\t\t\tthis.OpenUI5SelectModel = new JSONModel();\n\t\t\tthis.selectDataLoaded = this.OpenUI5SelectModel.loadData(\n\t\t\t\t`./data/selectVersions${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.getView().setModel(this.OpenUI5SelectModel, \"select\");\n\t\t\tthis.OpenUI5DataLoaded = true;\n\t\t}\n\t\tif (UI5Type === \"OpenUI5\" && this.OpenUI5DataLoaded) {\n\t\t\tthis.getView().setModel(this.OpenUI5Model, \"data\");\n\t\t\tthis.getView().setModel(this.OpenUI5SelectModel, \"select\");\n\t\t}\n\t\t// Check if data is loading, and if so, wait for the promises to settle before setting the flag to false\n\t\tif (this.SAPUI5DataLoading || this.OpenUI5DataLoading) {\n\t\t\tPromise.allSettled([this.dataLoaded, this.selectDataLoaded]).then(() => {\n\t\t\t\tif (UI5Type === \"SAPUI5\") {\n\t\t\t\t\tthis.SAPUI5DataLoading = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.OpenUI5DataLoading = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tonPatternMatchedOnce(): void {\n\t\tthis.getRouter()\n\t\t\t.getRoute(\"main\")\n\t\t\t.attachPatternMatched(this.onPatternMatched, this);\n\t\tthis.getQueryParameter();\n\t}\n\n\tonPatternMatched(): void {\n\t\tthis.getQueryParameter();\n\t}\n\n\tpublic async getQueryParameter(): Promise<void> {\n\t\tconst mParams = new URLSearchParams(window.location.search);\n\t\tconst versionFrom = mParams.get(\"versionFrom\");\n\t\tconst versionTo = mParams.get(\"versionTo\");\n\t\tconst ui5Type = mParams.get(\"ui5Type\");\n\t\tif (ui5Type) {\n\t\t\tthis.UI5Type = ui5Type;\n\t\t}\n\t\tthis.triggerLoadingData(this.UI5Type);\n\t\tawait Promise.all([this.dataLoaded, this.selectDataLoaded]);\n\t\tconst data = this.getView().getModel(\"select\").getData();\n\n\t\t// If both versionFrom and versionTo are null, exit the function\n\t\tif (versionFrom === null && versionTo === null) return;\n\n\t\t// Helper function to find nearest available version\n\t\tconst findNearestVersion = (targetVersion: string): string | null => {\n\t\t\tconst versions = data.map((item: any) => item.key || item.value);\n\t\t\t// Sort versions in descending order\n\t\t\tversions.sort((a: string, b: string) => this.compareVersionDesc(a, b));\n\n\t\t\t// Find the target version's major.minor\n\t\t\tconst [major, minor] = targetVersion.split(\".\").slice(0, 2);\n\t\t\tconst targetBase = `${major}.${minor}`;\n\n\t\t\t// Find all versions with same major.minor, then get the nearest lower version\n\t\t\tconst compatibleVersions = versions.filter((v: string) =>\n\t\t\t\tv.startsWith(targetBase)\n\t\t\t);\n\t\t\treturn (\n\t\t\t\tcompatibleVersions.find(\n\t\t\t\t\t(v: string) => this.compareVersion(v, targetVersion) <= 0\n\t\t\t\t) || null\n\t\t\t);\n\t\t};\n\n\t\tlet finalVersionFrom = versionFrom;\n\t\tlet finalVersionTo = versionTo;\n\t\tconst missingOrInvalid = [];\n\n\t\tif (!versionFrom) {\n\t\t\tmissingOrInvalid.push(\"versionFrom should be added\");\n\t\t} else if (\n\t\t\t!data.some(\n\t\t\t\t(item: any) => item.key === versionFrom || item.value === versionFrom\n\t\t\t)\n\t\t) {\n\t\t\tconst nearest = findNearestVersion(versionFrom);\n\t\t\tif (nearest) {\n\t\t\t\tfinalVersionFrom = nearest;\n\t\t\t\tMessageToast.show(\n\t\t\t\t\t`Using nearest available version ${nearest} for versionFrom`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmissingOrInvalid.push(`versionFrom ${versionFrom} is not valid`);\n\t\t\t}\n\t\t}\n\n\t\tif (!versionTo) {\n\t\t\tmissingOrInvalid.push(\"versionTo should be added\");\n\t\t} else if (\n\t\t\t!data.some(\n\t\t\t\t(item: any) => item.key === versionTo || item.value === versionTo\n\t\t\t)\n\t\t) {\n\t\t\tconst nearest = findNearestVersion(versionTo);\n\t\t\tif (nearest) {\n\t\t\t\tfinalVersionTo = nearest;\n\t\t\t\tMessageToast.show(\n\t\t\t\t\t`Using nearest available version ${nearest} for versionTo`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmissingOrInvalid.push(`versionTo ${versionTo} is not valid`);\n\t\t\t}\n\t\t}\n\n\t\tif (missingOrInvalid.length > 0) {\n\t\t\tMessageToast.show(missingOrInvalid.join(\" and \"));\n\t\t} else {\n\t\t\tthis.getView()\n\t\t\t\t.byId(\"versionFromSelect\")\n\t\t\t\t.setSelectedKey(finalVersionFrom!);\n\t\t\tthis.getView().byId(\"versionToSelect\").setSelectedKey(finalVersionTo!);\n\t\t\tthis.getView().byId(\"SegmentedButtonUI5\").setSelectedKey(ui5Type!);\n\t\t\tthis.handleVersionChange();\n\t\t}\n\t}\n\n\tpublic async handleVersionChange(): Promise<void> {\n\t\tthis.getView().setBusyIndicatorDelay(0);\n\t\tthis.getView().setBusy(true);\n\t\tthis.UI5Type = this.getView().byId(\"SegmentedButtonUI5\").getSelectedKey();\n\t\tthis.triggerLoadingData(this.UI5Type);\n\t\tawait Promise.all([this.dataLoaded, this.selectDataLoaded]);\n\t\tthis.updateURLParameters();\n\t\tconst versionFrom = this.getView().byId(\"versionFromSelect\").getSelectedKey();\n\t\tconst versionTo = this.getView().byId(\"versionToSelect\").getSelectedKey();\n\t\tconst versionObject = this.compareVersions(versionFrom, versionTo);\n\t\tconst filterKey = this.getView().byId(\"SegmentedButton\").getSelectedKey();\n\t\tif (versionFrom && versionTo) {\n\t\t\tconst changes = this.getMergedChangesBetweenVersions(\n\t\t\t\tversionObject.versionFrom,\n\t\t\t\tversionObject.versionTo,\n\t\t\t\tfilterKey\n\t\t\t);\n\t\t\tthis.getView().getModel(\"changes\").setData(changes);\n\t\t}\n\t\tthis.getView().setBusy(false);\n\t}\n\n\tpublic sayHello(): void {\n\t\tMessageBox.show(\"Hello World!\");\n\t}\n\n\tcompareVersion(v1: string, v2: string): number {\n\t\tconst parts1 = v1.split(\".\").map(Number);\n\t\tconst parts2 = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < parts1.length && i < parts2.length; i++) {\n\t\t\tif (parts1[i] < parts2[i]) return -1;\n\t\t\tif (parts1[i] > parts2[i]) return 1;\n\t\t}\n\n\t\treturn parts1.length - parts2.length;\n\t}\n\n\tsortChanges(changes: Change[]): Change[] {\n\t\tconst sortBy = this.getView().byId(\"SegmentedButtonSort\").getSelectedKey();\n\t\treturn changes.sort((a, b) => {\n\t\t\tif (sortBy === \"type\") {\n\t\t\t\tif (a.type === \"DEPRECATED\" && b.type !== \"DEPRECATED\") {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a.type !== \"DEPRECATED\" && b.type === \"DEPRECATED\") {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (a.type === \"FEATURE\" && b.type !== \"FEATURE\") {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a.type !== \"FEATURE\" && b.type === \"FEATURE\") {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\t// when types are the same, default to sorting by text\n\t\t\t\t\tif (!a.text || !b.text) {\n\t\t\t\t\t\tconsole.warn(\"Undefined or null text detected:\", a, b);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn a.text.localeCompare(b.text);\n\t\t\t\t}\n\t\t\t} else if (sortBy === \"text\") {\n\t\t\t\tif (!a.text || !b.text) {\n\t\t\t\t\tconsole.warn(\"Undefined or null text detected:\", a, b);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn a.text.localeCompare(b.text);\n\t\t\t} else {\n\t\t\t\t// sortBy === \"version\"\n\t\t\t\tif (!a.version || !b.version) {\n\t\t\t\t\tconsole.warn(\"Undefined or null version detected:\", a, b);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn this.compareVersionDesc(a.version, b.version);\n\t\t\t}\n\t\t});\n\t}\n\n\tmergeLibraries(versions: Version[]): Library[] {\n\t\tconst libraryMap: Map<string, Change[]> = new Map();\n\n\t\tfor (const version of versions) {\n\t\t\tfor (const lib of version.libraries) {\n\t\t\t\tconst changesWithVersion = lib.changes.map((change) => ({\n\t\t\t\t\t...change,\n\t\t\t\t\tversion: version.version,\n\t\t\t\t}));\n\n\t\t\t\tconst existingChanges = libraryMap.get(lib.library) || [];\n\t\t\t\tlibraryMap.set(lib.library, existingChanges.concat(changesWithVersion));\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(libraryMap.entries())\n\t\t\t.map(([library, changes]) => {\n\t\t\t\tconst uniqueChanges: Change[] = [];\n\t\t\t\tconst seenChanges = new Set<string>();\n\n\t\t\t\tfor (const change of this.sortChanges(changes)) {\n\t\t\t\t\t// we retain sorting changes based on their text\n\t\t\t\t\tconst changeString = JSON.stringify({\n\t\t\t\t\t\ttype: change.type,\n\t\t\t\t\t\ttext: change.text,\n\t\t\t\t\t\turl: change.commit_url\n\t\t\t\t\t\t// version intentionally omitted\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!seenChanges.has(changeString)) {\n\t\t\t\t\t\tseenChanges.add(changeString);\n\t\t\t\t\t\tuniqueChanges.push(change);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tlibrary,\n\t\t\t\t\tchanges: uniqueChanges,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.library === \"deprecated\") {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (b.library === \"deprecated\") {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn a.library.localeCompare(b.library); // sort by library name\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tgetMergedChangesBetweenVersions(\n\t\tstartVersion: string,\n\t\tendVersion: string,\n\t\tfilterType: \"ALL\" | \"FIX\" | \"FEATURE\"\n\t): Library[] {\n\t\tconst data = this.getView().getModel(\"data\").getData();\n\t\tconst versionsInRange = data.filter(\n\t\t\t(obj: Version) =>\n\t\t\t\tthis.compareVersion(obj.version, startVersion) > 0 &&\n\t\t\t\tthis.compareVersion(obj.version, endVersion) <= 0\n\t\t);\n\n\t\tconst mergedLibraries = this.mergeLibraries(versionsInRange);\n\n\t\tif (filterType === \"ALL\") {\n\t\t\treturn mergedLibraries;\n\t\t}\n\n\t\t// Filter changes based on the type\n\t\treturn mergedLibraries\n\t\t\t.map((lib) => {\n\t\t\t\tconst filteredChanges = lib.changes.filter(\n\t\t\t\t\t(change) => change.type === filterType\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tlibrary: lib.library,\n\t\t\t\t\tchanges: filteredChanges,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter((lib) => lib.changes.length > 0);\n\t}\n\n\tcompareVersions(v1: string, v2: string): { versionFrom: string; versionTo: string } {\n\t\tconst v1Parts = v1.split(\".\").map(Number);\n\t\tconst v2Parts = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < v1Parts.length; i++) {\n\t\t\tif (v1Parts[i] > v2Parts[i]) {\n\t\t\t\treturn {\n\t\t\t\t\tversionFrom: v2,\n\t\t\t\t\tversionTo: v1,\n\t\t\t\t};\n\t\t\t} else if (v1Parts[i] < v2Parts[i]) {\n\t\t\t\treturn {\n\t\t\t\t\tversionFrom: v1,\n\t\t\t\t\tversionTo: v2,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// If versions are equal\n\t\treturn {\n\t\t\tversionFrom: v1,\n\t\t\tversionTo: v2,\n\t\t};\n\t}\n\n\tcompareVersionDesc(v1: string, v2: string): number {\n\t\tconst parts1 = v1.split(\".\").map(Number);\n\t\tconst parts2 = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < parts1.length && i < parts2.length; i++) {\n\t\t\tif (parts1[i] > parts2[i]) return -1;\n\t\t\tif (parts1[i] < parts2[i]) return 1;\n\t\t}\n\n\t\treturn parts2.length - parts1.length;\n\t}\n\n\tonNavToWhatsnew(): void {\n\t\tthis.getRouter().navTo(\"whatsnew\");\n\t}\n\n\tpublic updateURLParameters(): void {\n\t\tconst versionTo = this.getView().byId(\"versionToSelect\").getSelectedKey();\n\t\tconst versionFrom = this.getView().byId(\"versionFromSelect\").getSelectedKey();\n\t\tconst ui5Type = this.getView().byId(\"SegmentedButtonUI5\").getSelectedKey();\n\t\tconst mParams = new URLSearchParams(window.location.search);\n\n\t\tif (versionTo) {\n\t\t\tmParams.set(\"versionTo\", versionTo);\n\t\t} else {\n\t\t\tmParams.delete(\"versionTo\");\n\t\t}\n\n\t\tif (versionFrom) {\n\t\t\tmParams.set(\"versionFrom\", versionFrom);\n\t\t} else {\n\t\t\tmParams.delete(\"versionFrom\");\n\t\t}\n\t\tmParams.set(\"ui5Type\", ui5Type);\n\n\t\tconst newURL = `${window.location.origin}${window.location.pathname}?${mParams.toString()}`;\n\t\twindow.history.pushState({}, \"\", newURL);\n\t}\n\n\tcopyLinkToClipboardMain(event: Event): void {\n\t\tthis.copyLinkToClipboard(event);\n\t}\n\n\tshowRSSFeedSAPUI5(): void {\n\t\twindow.open(\"rss_feed_SAPUI5.xml\");\n\t}\n\n\tshowRSSFeedOpenUI5(): void {\n\t\twindow.open(\"rss_feed_OpenUI5.xml\");\n\t}\n\n\topenGitHubRepo(): void {\n\t\twindow.open(\"https://github.com/marianfoo/ui5-lib-diff\");\n\t}\n\n\t// Updated method to handle copying according to selected format\n\tpublic async copyDataToClipboardMain(event: Event): Promise<void> {\n\t\t// Retrieve the data shown in the ObjectPageSection via the \"changes\" model\n\t\tconst changesData = this.getView().getModel(\"changes\").getData();\n\n\t\t// Check if there are no changes\n\t\tif (!Array.isArray(changesData) || changesData.length === 0) {\n\t\t\tMessageToast.show(\"No changes available to copy.\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet output = \"\";\n\n\t\tif (this.clipboardFormat === \"JSON\") {\n\t\t\t// Convert the entire changes data array to JSON\n\t\t\toutput = JSON.stringify(changesData, null, 2);\n\t\t} else if (this.clipboardFormat === \"MARKDOWN\") {\n\t\t\t// Build Markdown string\n\t\t\tchangesData.forEach((libraryObj: Library) => {\n\t\t\t\toutput += `## ${libraryObj.library}\\n`;\n\t\t\t\tlibraryObj.changes.forEach((change) => {\n\t\t\t\t\tconst commitLink = change.commit_url ? `([commit](${change.commit_url}))` : \"\";\n\t\t\t\t\toutput += `- **Version**: ${change.version ?? \"N/A\"}  \n**Type**: ${change.type}  \n**Text**: ${change.text} ${commitLink}\\n\\n`;\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// Default to Normal Text\n\t\t\tchangesData.forEach((libraryObj: Library) => {\n\t\t\t\toutput += `${libraryObj.library}\\n`;\n\t\t\t\tlibraryObj.changes.forEach((change) => {\n\t\t\t\t\tconst commitLink = change.commit_url ? ` (commit: ${change.commit_url})` : \"\";\n\t\t\t\t\toutput += `Version: ${change.version ?? \"N/A\"}, Type: ${change.type}, Text: ${change.text}${commitLink}\\n`;\n\t\t\t\t});\n\t\t\t\toutput += \"\\n\";\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tif (\"clipboard\" in navigator) {\n\t\t\t\tawait navigator.clipboard.writeText(output);\n\t\t\t\tMessageToast.show(\"Changes copied to clipboard!\");\n\t\t\t} else {\n\t\t\t\t// Fallback for older browsers\n\t\t\t\tconst dummyInput = document.createElement(\"textarea\");\n\t\t\t\tdocument.body.appendChild(dummyInput);\n\t\t\t\tdummyInput.value = output;\n\t\t\t\tdummyInput.select();\n\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\tdocument.body.removeChild(dummyInput);\n\t\t\t\tMessageToast.show(\"Changes copied to clipboard!\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Copy to clipboard failed:\", error);\n\t\t\tMessageToast.show(\"Failed to copy changes.\");\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}