"use strict";sap.ui.define(["sap/m/MessageBox","./BaseController","sap/ui/model/json/JSONModel","sap/m/MessageToast"],function(e,t,o,i){"use strict";function s(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const n=s(t);const a=n.extend("de.marianzeis.ui5libdiff.controller.Main",{constructor:function e(){n.prototype.constructor.apply(this,arguments);this.UI5Type="SAPUI5";this.SAPUI5DataLoaded=false;this.OpenUI5DataLoaded=false;this.clipboardFormat="TEXT"},onInit:async function e(){this.getView().setBusyIndicatorDelay(0);this.getView().setBusy(true);this.getRouter().getRoute("main").attachEventOnce("patternMatched",this.onPatternMatchedOnce,this);this.getView().setModel(new o,"changes");this.getView().setModel(new o,"versionFrom");this.getView().setModel(new o,"versionTo");this.getView().setBusy(false);this.clipboardFormat="TEXT"},onFormatChange:function e(t){const o=t.getSource().getSelectedKey();this.clipboardFormat=o},triggerLoadingData:function e(t){if(this.dataIsLoading&&this.ui5TypeLoading!==t)return;if(t==="SAPUI5"&&!this.SAPUI5DataLoaded){this.ui5TypeLoading="SAPUI5";this.SAPUI5DataLoading=true;this.SAPUI5Model=new o;this.dataLoaded=this.SAPUI5Model.loadData(`./data/consolidated${t}.json`);this.dataLoaded.then(()=>{this.dataIsLoading=false});this.getView().setModel(this.SAPUI5Model,"data");this.SAPUI5SelectModel=new o;this.selectDataLoaded=this.SAPUI5SelectModel.loadData(`./data/selectVersions${t}.json`);this.getView().setModel(this.SAPUI5SelectModel,"select");this.SAPUI5DataLoaded=true}if(t==="SAPUI5"&&this.SAPUI5DataLoaded){this.getView().setModel(this.SAPUI5Model,"data");this.getView().setModel(this.SAPUI5SelectModel,"select")}if(t==="OpenUI5"&&!this.OpenUI5DataLoaded){this.ui5TypeLoading="OpenUI5";this.OpenUI5DataLoading=true;this.OpenUI5Model=new o;this.dataLoaded=this.OpenUI5Model.loadData(`./data/consolidated${t}.json`);this.getView().setModel(this.OpenUI5Model,"data");this.OpenUI5SelectModel=new o;this.selectDataLoaded=this.OpenUI5SelectModel.loadData(`./data/selectVersions${t}.json`);this.getView().setModel(this.OpenUI5SelectModel,"select");this.OpenUI5DataLoaded=true}if(t==="OpenUI5"&&this.OpenUI5DataLoaded){this.getView().setModel(this.OpenUI5Model,"data");this.getView().setModel(this.OpenUI5SelectModel,"select")}if(this.SAPUI5DataLoading||this.OpenUI5DataLoading){Promise.allSettled([this.dataLoaded,this.selectDataLoaded]).then(()=>{if(t==="SAPUI5"){this.SAPUI5DataLoading=false}else{this.OpenUI5DataLoading=false}})}},onPatternMatchedOnce:function e(){this.getRouter().getRoute("main").attachPatternMatched(this.onPatternMatched,this);this.getQueryParameter()},onPatternMatched:function e(){this.getQueryParameter()},getQueryParameter:async function e(){const t=new URLSearchParams(window.location.search);const o=t.get("versionFrom");const s=t.get("versionTo");const n=t.get("ui5Type");if(n){this.UI5Type=n}this.triggerLoadingData(this.UI5Type);await Promise.all([this.dataLoaded,this.selectDataLoaded]);const a=this.getView().getModel("select").getData();if(o===null&&s===null)return;const r=e=>{const t=a.map(e=>e.key||e.value);t.sort((e,t)=>this.compareVersionDesc(e,t));const[o,i]=e.split(".").slice(0,2);const s=`${o}.${i}`;const n=t.filter(e=>e.startsWith(s));return n.find(t=>this.compareVersion(t,e)<=0)||null};let l=o;let d=s;const c=[];if(!o){c.push("versionFrom should be added")}else if(!a.some(e=>e.key===o||e.value===o)){const e=r(o);if(e){l=e;i.show(`Using nearest available version ${e} for versionFrom`)}else{c.push(`versionFrom ${o} is not valid`)}}if(!s){c.push("versionTo should be added")}else if(!a.some(e=>e.key===s||e.value===s)){const e=r(s);if(e){d=e;i.show(`Using nearest available version ${e} for versionTo`)}else{c.push(`versionTo ${s} is not valid`)}}if(c.length>0){i.show(c.join(" and "))}else{this.getView().byId("versionFromSelect").setSelectedKey(l);this.getView().byId("versionToSelect").setSelectedKey(d);this.getView().byId("SegmentedButtonUI5").setSelectedKey(n);this.handleVersionChange()}},handleVersionChange:async function e(){this.getView().setBusyIndicatorDelay(0);this.getView().setBusy(true);this.UI5Type=this.getView().byId("SegmentedButtonUI5").getSelectedKey();this.triggerLoadingData(this.UI5Type);await Promise.all([this.dataLoaded,this.selectDataLoaded]);this.updateURLParameters();const t=this.getView().byId("versionFromSelect").getSelectedKey();const o=this.getView().byId("versionToSelect").getSelectedKey();const i=this.compareVersions(t,o);const s=this.getView().byId("SegmentedButton").getSelectedKey();if(t&&o){const e=this.getMergedChangesBetweenVersions(i.versionFrom,i.versionTo,s);this.getView().getModel("changes").setData(e)}this.getView().setBusy(false)},sayHello:function t(){e.show("Hello World!")},compareVersion:function e(t,o){const i=t.split(".").map(Number);const s=o.split(".").map(Number);for(let e=0;e<i.length&&e<s.length;e++){if(i[e]<s[e])return-1;if(i[e]>s[e])return 1}return i.length-s.length},sortChanges:function e(t){const o=this.getView().byId("SegmentedButtonSort").getSelectedKey();return t.sort((e,t)=>{if(o==="type"){if(e.type==="DEPRECATED"&&t.type!=="DEPRECATED"){return-1}else if(e.type!=="DEPRECATED"&&t.type==="DEPRECATED"){return 1}else if(e.type==="FEATURE"&&t.type!=="FEATURE"){return-1}else if(e.type!=="FEATURE"&&t.type==="FEATURE"){return 1}else{if(!e.text||!t.text){console.warn("Undefined or null text detected:",e,t);return 0}return e.text.localeCompare(t.text)}}else if(o==="text"){if(!e.text||!t.text){console.warn("Undefined or null text detected:",e,t);return 0}return e.text.localeCompare(t.text)}else{if(!e.version||!t.version){console.warn("Undefined or null version detected:",e,t);return 0}return this.compareVersionDesc(e.version,t.version)}})},mergeLibraries:function e(t){const o=new Map;for(const e of t){for(const t of e.libraries){const i=t.changes.map(t=>({...t,version:e.version}));const s=o.get(t.library)||[];o.set(t.library,s.concat(i))}}return Array.from(o.entries()).map(e=>{let[t,o]=e;const i=[];const s=new Set;for(const e of this.sortChanges(o)){const t=JSON.stringify({type:e.type,text:e.text,url:e.commit_url});if(!s.has(t)){s.add(t);i.push(e)}}return{library:t,changes:i}}).sort((e,t)=>{if(e.library==="deprecated"){return-1}else if(t.library==="deprecated"){return 1}else{return e.library.localeCompare(t.library)}})},getMergedChangesBetweenVersions:function e(t,o,i){const s=this.getView().getModel("data").getData();const n=s.filter(e=>this.compareVersion(e.version,t)>0&&this.compareVersion(e.version,o)<=0);const a=this.mergeLibraries(n);if(i==="ALL"){return a}return a.map(e=>{const t=e.changes.filter(e=>e.type===i);return{library:e.library,changes:t}}).filter(e=>e.changes.length>0)},compareVersions:function e(t,o){const i=t.split(".").map(Number);const s=o.split(".").map(Number);for(let e=0;e<i.length;e++){if(i[e]>s[e]){return{versionFrom:o,versionTo:t}}else if(i[e]<s[e]){return{versionFrom:t,versionTo:o}}}return{versionFrom:t,versionTo:o}},compareVersionDesc:function e(t,o){const i=t.split(".").map(Number);const s=o.split(".").map(Number);for(let e=0;e<i.length&&e<s.length;e++){if(i[e]>s[e])return-1;if(i[e]<s[e])return 1}return s.length-i.length},onNavToWhatsnew:function e(){this.getRouter().navTo("whatsnew")},updateURLParameters:function e(){const t=this.getView().byId("versionToSelect").getSelectedKey();const o=this.getView().byId("versionFromSelect").getSelectedKey();const i=this.getView().byId("SegmentedButtonUI5").getSelectedKey();const s=new URLSearchParams(window.location.search);if(t){s.set("versionTo",t)}else{s.delete("versionTo")}if(o){s.set("versionFrom",o)}else{s.delete("versionFrom")}s.set("ui5Type",i);const n=`${window.location.origin}${window.location.pathname}?${s.toString()}`;window.history.pushState({},"",n)},copyLinkToClipboardMain:function e(t){this.copyLinkToClipboard(t)},showRSSFeedSAPUI5:function e(){window.open("rss_feed_SAPUI5.xml")},showRSSFeedOpenUI5:function e(){window.open("rss_feed_OpenUI5.xml")},openGitHubRepo:function e(){window.open("https://github.com/marianfoo/ui5-lib-diff")},copyDataToClipboardMain:async function e(t){const o=this.getView().getModel("changes").getData();if(!Array.isArray(o)||o.length===0){i.show("No changes available to copy.");return}let s="";if(this.clipboardFormat==="JSON"){s=JSON.stringify(o,null,2)}else if(this.clipboardFormat==="MARKDOWN"){o.forEach(e=>{s+=`## ${e.library}\n`;e.changes.forEach(e=>{const t=e.commit_url?`([commit](${e.commit_url}))`:"";s+=`- **Version**: ${e.version??"N/A"}  \n**Type**: ${e.type}  \n**Text**: ${e.text} ${t}\n\n`})})}else{o.forEach(e=>{s+=`${e.library}\n`;e.changes.forEach(e=>{const t=e.commit_url?` (commit: ${e.commit_url})`:"";s+=`Version: ${e.version??"N/A"}, Type: ${e.type}, Text: ${e.text}${t}\n`});s+="\n"})}try{if("clipboard"in navigator){await navigator.clipboard.writeText(s);i.show("Changes copied to clipboard!")}else{const e=document.createElement("textarea");document.body.appendChild(e);e.value=s;e.select();document.execCommand("copy");document.body.removeChild(e);i.show("Changes copied to clipboard!")}}catch(e){console.error("Copy to clipboard failed:",e);i.show("Failed to copy changes.")}}});return a});
//# sourceMappingURL=Main.controller.js.map