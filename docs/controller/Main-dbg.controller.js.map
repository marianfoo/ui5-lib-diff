{"version":3,"file":"Main-dbg.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","constructor","prototype","apply","arguments","UI5Type","SAPUI5DataLoaded","OpenUI5DataLoaded","clipboardFormat","onInit","_onInit","getView","setBusyIndicatorDelay","setBusy","getRouter","getRoute","attachEventOnce","onPatternMatchedOnce","setModel","JSONModel","onFormatChange","_onFormatChange","event","selectedKey","getSource","getSelectedKey","triggerLoadingData","_triggerLoadingData","dataIsLoading","ui5TypeLoading","SAPUI5DataLoading","SAPUI5Model","dataLoaded","loadData","then","SAPUI5SelectModel","selectDataLoaded","OpenUI5DataLoading","OpenUI5Model","OpenUI5SelectModel","Promise","allSettled","_onPatternMatchedOnce","attachPatternMatched","onPatternMatched","getQueryParameter","_onPatternMatched","_getQueryParameter","mParams","URLSearchParams","window","location","search","versionFrom","get","versionTo","ui5Type","all","data","getModel","getData","findNearestVersion","targetVersion","versions","map","item","key","value","sort","a","b","compareVersionDesc","major","minor","split","slice","targetBase","compatibleVersions","filter","v","startsWith","find","compareVersion","finalVersionFrom","finalVersionTo","missingOrInvalid","push","some","nearest","MessageToast","show","length","join","byId","setSelectedKey","handleVersionChange","_handleVersionChange","updateURLParameters","versionObject","compareVersions","filterKey","changes","getMergedChangesBetweenVersions","setData","sayHello","_sayHello","MessageBox","_compareVersion","v1","v2","parts1","Number","parts2","i","sortChanges","_sortChanges","sortBy","type","text","console","warn","localeCompare","version","mergeLibraries","_mergeLibraries","libraryMap","Map","lib","libraries","changesWithVersion","change","existingChanges","library","set","concat","Array","from","entries","_ref","uniqueChanges","seenChanges","Set","changeString","JSON","stringify","url","commit_url","has","add","_getMergedChangesBetweenVersions","startVersion","endVersion","filterType","versionsInRange","obj","mergedLibraries","filteredChanges","_compareVersions","v1Parts","v2Parts","_compareVersionDesc","onNavToWhatsnew","_onNavToWhatsnew","navTo","_updateURLParameters","delete","newURL","origin","pathname","toString","history","pushState","copyLinkToClipboardMain","_copyLinkToClipboardMain","copyLinkToClipboard","showRSSFeedSAPUI5","_showRSSFeedSAPUI","open","showRSSFeedOpenUI5","_showRSSFeedOpenUI","openGitHubRepo","_openGitHubRepo","copyDataToClipboardMain","_copyDataToClipboardMain","changesData","isArray","output","forEach","libraryObj","commitLink","navigator","clipboard","writeText","dummyInput","document","createElement","body","appendChild","select","execCommand","removeChild","error"],"sources":["Main.controller.ts"],"sourcesContent":["import MessageBox from \"sap/m/MessageBox\";\nimport BaseController from \"./BaseController\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport MessageToast from \"sap/m/MessageToast\";\n\ninterface Change {\n\ttype: \"FEATURE\" | \"FIX\" | \"DEPRECATED\";\n\ttext: string;\n\tversion?: string; // add this line to include an optional version property\n\tcommit_url?: string;\n}\n\ninterface Library {\n\tlibrary: string;\n\tchanges: Change[];\n}\n\ninterface Version {\n\tversion: string;\n\tlibraries: Library[];\n}\n\n/**\n * @namespace de.marianzeis.ui5libdiff.controller\n */\nexport default class Main extends BaseController {\n\tdataLoaded: Promise<any>;\n\tselectDataLoaded: Promise<any>;\n\tUI5Type: string = \"SAPUI5\";\n\tSAPUI5Model: JSONModel;\n\tSAPUI5SelectModel: JSONModel;\n\tOpenUI5Model: JSONModel;\n\tOpenUI5SelectModel: JSONModel;\n\tSAPUI5DataLoaded: boolean = false;\n\tOpenUI5DataLoaded: boolean = false;\n\tSAPUI5DataLoading: any;\n\tdataIsLoading: any;\n\tOpenUI5DataLoading: boolean;\n\tui5TypeLoading: string;\n\n\t// New property for storing the chosen clipboard format\n\tprivate clipboardFormat: \"TEXT\" | \"MARKDOWN\" | \"JSON\" = \"TEXT\";\n\n\tpublic async onInit(): void {\n\t\tthis.getView().setBusyIndicatorDelay(0);\n\t\tthis.getView().setBusy(true);\n\t\tthis.getRouter()\n\t\t\t.getRoute(\"main\")\n\t\t\t.attachEventOnce(\"patternMatched\", this.onPatternMatchedOnce, this);\n\t\tthis.getView().setModel(new JSONModel(), \"changes\");\n\t\tthis.getView().setModel(new JSONModel(), \"versionFrom\");\n\t\tthis.getView().setModel(new JSONModel(), \"versionTo\");\n\t\tthis.getView().setBusy(false);\n\t\tthis.clipboardFormat = \"TEXT\";\n\t}\n\n\t// Event handler for the new ComboBox\n\tpublic onFormatChange(event: any): void {\n\t\tconst selectedKey = event.getSource().getSelectedKey()\n\t\tthis.clipboardFormat = selectedKey;\n\t}\n\n\ttriggerLoadingData(UI5Type: string): void {\n\t\tif (this.dataIsLoading && this.ui5TypeLoading !== UI5Type) return;\n\t\tif (UI5Type === \"SAPUI5\" && !this.SAPUI5DataLoaded) {\n\t\t\tthis.ui5TypeLoading = \"SAPUI5\";\n\t\t\tthis.SAPUI5DataLoading = true;\n\t\t\tthis.SAPUI5Model = new JSONModel();\n\t\t\tthis.dataLoaded = this.SAPUI5Model.loadData(\n\t\t\t\t`./data/consolidated${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.dataLoaded.then(() => {\n\t\t\t\tthis.dataIsLoading = false;\n\t\t\t});\n\t\t\tthis.getView().setModel(this.SAPUI5Model, \"data\");\n\t\t\tthis.SAPUI5SelectModel = new JSONModel();\n\t\t\tthis.selectDataLoaded = this.SAPUI5SelectModel.loadData(\n\t\t\t\t`./data/selectVersions${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.getView().setModel(this.SAPUI5SelectModel, \"select\");\n\t\t\tthis.SAPUI5DataLoaded = true;\n\t\t}\n\t\tif (UI5Type === \"SAPUI5\" && this.SAPUI5DataLoaded) {\n\t\t\tthis.getView().setModel(this.SAPUI5Model, \"data\");\n\t\t\tthis.getView().setModel(this.SAPUI5SelectModel, \"select\");\n\t\t}\n\t\tif (UI5Type === \"OpenUI5\" && !this.OpenUI5DataLoaded) {\n\t\t\tthis.ui5TypeLoading = \"OpenUI5\";\n\t\t\tthis.OpenUI5DataLoading = true;\n\t\t\tthis.OpenUI5Model = new JSONModel();\n\t\t\tthis.dataLoaded = this.OpenUI5Model.loadData(\n\t\t\t\t`./data/consolidated${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.getView().setModel(this.OpenUI5Model, \"data\");\n\t\t\tthis.OpenUI5SelectModel = new JSONModel();\n\t\t\tthis.selectDataLoaded = this.OpenUI5SelectModel.loadData(\n\t\t\t\t`./data/selectVersions${UI5Type}.json`\n\t\t\t);\n\t\t\tthis.getView().setModel(this.OpenUI5SelectModel, \"select\");\n\t\t\tthis.OpenUI5DataLoaded = true;\n\t\t}\n\t\tif (UI5Type === \"OpenUI5\" && this.OpenUI5DataLoaded) {\n\t\t\tthis.getView().setModel(this.OpenUI5Model, \"data\");\n\t\t\tthis.getView().setModel(this.OpenUI5SelectModel, \"select\");\n\t\t}\n\t\t// Check if data is loading, and if so, wait for the promises to settle before setting the flag to false\n\t\tif (this.SAPUI5DataLoading || this.OpenUI5DataLoading) {\n\t\t\tPromise.allSettled([this.dataLoaded, this.selectDataLoaded]).then(() => {\n\t\t\t\tif (UI5Type === \"SAPUI5\") {\n\t\t\t\t\tthis.SAPUI5DataLoading = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.OpenUI5DataLoading = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tonPatternMatchedOnce(): void {\n\t\tthis.getRouter()\n\t\t\t.getRoute(\"main\")\n\t\t\t.attachPatternMatched(this.onPatternMatched, this);\n\t\tthis.getQueryParameter();\n\t}\n\n\tonPatternMatched(): void {\n\t\tthis.getQueryParameter();\n\t}\n\n\tpublic async getQueryParameter(): Promise<void> {\n\t\tconst mParams = new URLSearchParams(window.location.search);\n\t\tconst versionFrom = mParams.get(\"versionFrom\");\n\t\tconst versionTo = mParams.get(\"versionTo\");\n\t\tconst ui5Type = mParams.get(\"ui5Type\");\n\t\tif (ui5Type) {\n\t\t\tthis.UI5Type = ui5Type;\n\t\t}\n\t\tthis.triggerLoadingData(this.UI5Type);\n\t\tawait Promise.all([this.dataLoaded, this.selectDataLoaded]);\n\t\tconst data = this.getView().getModel(\"select\").getData();\n\n\t\t// If both versionFrom and versionTo are null, exit the function\n\t\tif (versionFrom === null && versionTo === null) return;\n\n\t\t// Helper function to find nearest available version\n\t\tconst findNearestVersion = (targetVersion: string): string | null => {\n\t\t\tconst versions = data.map((item: any) => item.key || item.value);\n\t\t\t// Sort versions in descending order\n\t\t\tversions.sort((a: string, b: string) => this.compareVersionDesc(a, b));\n\n\t\t\t// Find the target version's major.minor\n\t\t\tconst [major, minor] = targetVersion.split(\".\").slice(0, 2);\n\t\t\tconst targetBase = `${major}.${minor}`;\n\n\t\t\t// Find all versions with same major.minor, then get the nearest lower version\n\t\t\tconst compatibleVersions = versions.filter((v: string) =>\n\t\t\t\tv.startsWith(targetBase)\n\t\t\t);\n\t\t\treturn (\n\t\t\t\tcompatibleVersions.find(\n\t\t\t\t\t(v: string) => this.compareVersion(v, targetVersion) <= 0\n\t\t\t\t) || null\n\t\t\t);\n\t\t};\n\n\t\tlet finalVersionFrom = versionFrom;\n\t\tlet finalVersionTo = versionTo;\n\t\tconst missingOrInvalid = [];\n\n\t\tif (!versionFrom) {\n\t\t\tmissingOrInvalid.push(\"versionFrom should be added\");\n\t\t} else if (\n\t\t\t!data.some(\n\t\t\t\t(item: any) => item.key === versionFrom || item.value === versionFrom\n\t\t\t)\n\t\t) {\n\t\t\tconst nearest = findNearestVersion(versionFrom);\n\t\t\tif (nearest) {\n\t\t\t\tfinalVersionFrom = nearest;\n\t\t\t\tMessageToast.show(\n\t\t\t\t\t`Using nearest available version ${nearest} for versionFrom`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmissingOrInvalid.push(`versionFrom ${versionFrom} is not valid`);\n\t\t\t}\n\t\t}\n\n\t\tif (!versionTo) {\n\t\t\tmissingOrInvalid.push(\"versionTo should be added\");\n\t\t} else if (\n\t\t\t!data.some(\n\t\t\t\t(item: any) => item.key === versionTo || item.value === versionTo\n\t\t\t)\n\t\t) {\n\t\t\tconst nearest = findNearestVersion(versionTo);\n\t\t\tif (nearest) {\n\t\t\t\tfinalVersionTo = nearest;\n\t\t\t\tMessageToast.show(\n\t\t\t\t\t`Using nearest available version ${nearest} for versionTo`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmissingOrInvalid.push(`versionTo ${versionTo} is not valid`);\n\t\t\t}\n\t\t}\n\n\t\tif (missingOrInvalid.length > 0) {\n\t\t\tMessageToast.show(missingOrInvalid.join(\" and \"));\n\t\t} else {\n\t\t\tthis.getView()\n\t\t\t\t.byId(\"versionFromSelect\")\n\t\t\t\t.setSelectedKey(finalVersionFrom!);\n\t\t\tthis.getView().byId(\"versionToSelect\").setSelectedKey(finalVersionTo!);\n\t\t\tthis.getView().byId(\"SegmentedButtonUI5\").setSelectedKey(ui5Type!);\n\t\t\tthis.handleVersionChange();\n\t\t}\n\t}\n\n\tpublic async handleVersionChange(): Promise<void> {\n\t\tthis.getView().setBusyIndicatorDelay(0);\n\t\tthis.getView().setBusy(true);\n\t\tthis.UI5Type = this.getView().byId(\"SegmentedButtonUI5\").getSelectedKey();\n\t\tthis.triggerLoadingData(this.UI5Type);\n\t\tawait Promise.all([this.dataLoaded, this.selectDataLoaded]);\n\t\tthis.updateURLParameters();\n\t\tconst versionFrom = this.getView().byId(\"versionFromSelect\").getSelectedKey();\n\t\tconst versionTo = this.getView().byId(\"versionToSelect\").getSelectedKey();\n\t\tconst versionObject = this.compareVersions(versionFrom, versionTo);\n\t\tconst filterKey = this.getView().byId(\"SegmentedButton\").getSelectedKey();\n\t\tif (versionFrom && versionTo) {\n\t\t\tconst changes = this.getMergedChangesBetweenVersions(\n\t\t\t\tversionObject.versionFrom,\n\t\t\t\tversionObject.versionTo,\n\t\t\t\tfilterKey\n\t\t\t);\n\t\t\tthis.getView().getModel(\"changes\").setData(changes);\n\t\t}\n\t\tthis.getView().setBusy(false);\n\t}\n\n\tpublic sayHello(): void {\n\t\tMessageBox.show(\"Hello World!\");\n\t}\n\n\tcompareVersion(v1: string, v2: string): number {\n\t\tconst parts1 = v1.split(\".\").map(Number);\n\t\tconst parts2 = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < parts1.length && i < parts2.length; i++) {\n\t\t\tif (parts1[i] < parts2[i]) return -1;\n\t\t\tif (parts1[i] > parts2[i]) return 1;\n\t\t}\n\n\t\treturn parts1.length - parts2.length;\n\t}\n\n\tsortChanges(changes: Change[]): Change[] {\n\t\tconst sortBy = this.getView().byId(\"SegmentedButtonSort\").getSelectedKey();\n\t\treturn changes.sort((a, b) => {\n\t\t\tif (sortBy === \"type\") {\n\t\t\t\tif (a.type === \"DEPRECATED\" && b.type !== \"DEPRECATED\") {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a.type !== \"DEPRECATED\" && b.type === \"DEPRECATED\") {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (a.type === \"FEATURE\" && b.type !== \"FEATURE\") {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (a.type !== \"FEATURE\" && b.type === \"FEATURE\") {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\t// when types are the same, default to sorting by text\n\t\t\t\t\tif (!a.text || !b.text) {\n\t\t\t\t\t\tconsole.warn(\"Undefined or null text detected:\", a, b);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn a.text.localeCompare(b.text);\n\t\t\t\t}\n\t\t\t} else if (sortBy === \"text\") {\n\t\t\t\tif (!a.text || !b.text) {\n\t\t\t\t\tconsole.warn(\"Undefined or null text detected:\", a, b);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn a.text.localeCompare(b.text);\n\t\t\t} else {\n\t\t\t\t// sortBy === \"version\"\n\t\t\t\tif (!a.version || !b.version) {\n\t\t\t\t\tconsole.warn(\"Undefined or null version detected:\", a, b);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\treturn this.compareVersionDesc(a.version, b.version);\n\t\t\t}\n\t\t});\n\t}\n\n\tmergeLibraries(versions: Version[]): Library[] {\n\t\tconst libraryMap: Map<string, Change[]> = new Map();\n\n\t\tfor (const version of versions) {\n\t\t\tfor (const lib of version.libraries) {\n\t\t\t\tconst changesWithVersion = lib.changes.map((change) => ({\n\t\t\t\t\t...change,\n\t\t\t\t\tversion: version.version,\n\t\t\t\t}));\n\n\t\t\t\tconst existingChanges = libraryMap.get(lib.library) || [];\n\t\t\t\tlibraryMap.set(lib.library, existingChanges.concat(changesWithVersion));\n\t\t\t}\n\t\t}\n\n\t\treturn Array.from(libraryMap.entries())\n\t\t\t.map(([library, changes]) => {\n\t\t\t\tconst uniqueChanges: Change[] = [];\n\t\t\t\tconst seenChanges = new Set<string>();\n\n\t\t\t\tfor (const change of this.sortChanges(changes)) {\n\t\t\t\t\t// we retain sorting changes based on their text\n\t\t\t\t\tconst changeString = JSON.stringify({\n\t\t\t\t\t\ttype: change.type,\n\t\t\t\t\t\ttext: change.text,\n\t\t\t\t\t\turl: change.commit_url\n\t\t\t\t\t\t// version intentionally omitted\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!seenChanges.has(changeString)) {\n\t\t\t\t\t\tseenChanges.add(changeString);\n\t\t\t\t\t\tuniqueChanges.push(change);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tlibrary,\n\t\t\t\t\tchanges: uniqueChanges,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.library === \"deprecated\") {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (b.library === \"deprecated\") {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn a.library.localeCompare(b.library); // sort by library name\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tgetMergedChangesBetweenVersions(\n\t\tstartVersion: string,\n\t\tendVersion: string,\n\t\tfilterType: \"ALL\" | \"FIX\" | \"FEATURE\"\n\t): Library[] {\n\t\tconst data = this.getView().getModel(\"data\").getData();\n\t\tconst versionsInRange = data.filter(\n\t\t\t(obj: Version) =>\n\t\t\t\tthis.compareVersion(obj.version, startVersion) > 0 &&\n\t\t\t\tthis.compareVersion(obj.version, endVersion) <= 0\n\t\t);\n\n\t\tconst mergedLibraries = this.mergeLibraries(versionsInRange);\n\n\t\tif (filterType === \"ALL\") {\n\t\t\treturn mergedLibraries;\n\t\t}\n\n\t\t// Filter changes based on the type\n\t\treturn mergedLibraries\n\t\t\t.map((lib) => {\n\t\t\t\tconst filteredChanges = lib.changes.filter(\n\t\t\t\t\t(change) => change.type === filterType\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tlibrary: lib.library,\n\t\t\t\t\tchanges: filteredChanges,\n\t\t\t\t};\n\t\t\t})\n\t\t\t.filter((lib) => lib.changes.length > 0);\n\t}\n\n\tcompareVersions(v1: string, v2: string): { versionFrom: string; versionTo: string } {\n\t\tconst v1Parts = v1.split(\".\").map(Number);\n\t\tconst v2Parts = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < v1Parts.length; i++) {\n\t\t\tif (v1Parts[i] > v2Parts[i]) {\n\t\t\t\treturn {\n\t\t\t\t\tversionFrom: v2,\n\t\t\t\t\tversionTo: v1,\n\t\t\t\t};\n\t\t\t} else if (v1Parts[i] < v2Parts[i]) {\n\t\t\t\treturn {\n\t\t\t\t\tversionFrom: v1,\n\t\t\t\t\tversionTo: v2,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// If versions are equal\n\t\treturn {\n\t\t\tversionFrom: v1,\n\t\t\tversionTo: v2,\n\t\t};\n\t}\n\n\tcompareVersionDesc(v1: string, v2: string): number {\n\t\tconst parts1 = v1.split(\".\").map(Number);\n\t\tconst parts2 = v2.split(\".\").map(Number);\n\n\t\tfor (let i = 0; i < parts1.length && i < parts2.length; i++) {\n\t\t\tif (parts1[i] > parts2[i]) return -1;\n\t\t\tif (parts1[i] < parts2[i]) return 1;\n\t\t}\n\n\t\treturn parts2.length - parts1.length;\n\t}\n\n\tonNavToWhatsnew(): void {\n\t\tthis.getRouter().navTo(\"whatsnew\");\n\t}\n\n\tpublic updateURLParameters(): void {\n\t\tconst versionTo = this.getView().byId(\"versionToSelect\").getSelectedKey();\n\t\tconst versionFrom = this.getView().byId(\"versionFromSelect\").getSelectedKey();\n\t\tconst ui5Type = this.getView().byId(\"SegmentedButtonUI5\").getSelectedKey();\n\t\tconst mParams = new URLSearchParams(window.location.search);\n\n\t\tif (versionTo) {\n\t\t\tmParams.set(\"versionTo\", versionTo);\n\t\t} else {\n\t\t\tmParams.delete(\"versionTo\");\n\t\t}\n\n\t\tif (versionFrom) {\n\t\t\tmParams.set(\"versionFrom\", versionFrom);\n\t\t} else {\n\t\t\tmParams.delete(\"versionFrom\");\n\t\t}\n\t\tmParams.set(\"ui5Type\", ui5Type);\n\n\t\tconst newURL = `${window.location.origin}${window.location.pathname}?${mParams.toString()}`;\n\t\twindow.history.pushState({}, \"\", newURL);\n\t}\n\n\tcopyLinkToClipboardMain(event: Event): void {\n\t\tthis.copyLinkToClipboard(event);\n\t}\n\n\tshowRSSFeedSAPUI5(): void {\n\t\twindow.open(\"rss_feed_SAPUI5.xml\");\n\t}\n\n\tshowRSSFeedOpenUI5(): void {\n\t\twindow.open(\"rss_feed_OpenUI5.xml\");\n\t}\n\n\topenGitHubRepo(): void {\n\t\twindow.open(\"https://github.com/marianfoo/ui5-lib-diff\");\n\t}\n\n\t// Updated method to handle copying according to selected format\n\tpublic async copyDataToClipboardMain(event: Event): Promise<void> {\n\t\t// Retrieve the data shown in the ObjectPageSection via the \"changes\" model\n\t\tconst changesData = this.getView().getModel(\"changes\").getData();\n\n\t\t// Check if there are no changes\n\t\tif (!Array.isArray(changesData) || changesData.length === 0) {\n\t\t\tMessageToast.show(\"No changes available to copy.\");\n\t\t\treturn;\n\t\t}\n\n\t\tlet output = \"\";\n\n\t\tif (this.clipboardFormat === \"JSON\") {\n\t\t\t// Convert the entire changes data array to JSON\n\t\t\toutput = JSON.stringify(changesData, null, 2);\n\t\t} else if (this.clipboardFormat === \"MARKDOWN\") {\n\t\t\t// Build Markdown string\n\t\t\tchangesData.forEach((libraryObj: Library) => {\n\t\t\t\toutput += `## ${libraryObj.library}\\n`;\n\t\t\t\tlibraryObj.changes.forEach((change) => {\n\t\t\t\t\tconst commitLink = change.commit_url ? `([commit](${change.commit_url}))` : \"\";\n\t\t\t\t\toutput += `- **Version**: ${change.version ?? \"N/A\"}  \n**Type**: ${change.type}  \n**Text**: ${change.text} ${commitLink}\\n\\n`;\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\t// Default to Normal Text\n\t\t\tchangesData.forEach((libraryObj: Library) => {\n\t\t\t\toutput += `${libraryObj.library}\\n`;\n\t\t\t\tlibraryObj.changes.forEach((change) => {\n\t\t\t\t\tconst commitLink = change.commit_url ? ` (commit: ${change.commit_url})` : \"\";\n\t\t\t\t\toutput += `Version: ${change.version ?? \"N/A\"}, Type: ${change.type}, Text: ${change.text}${commitLink}\\n`;\n\t\t\t\t});\n\t\t\t\toutput += \"\\n\";\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tif (\"clipboard\" in navigator) {\n\t\t\t\tawait navigator.clipboard.writeText(output);\n\t\t\t\tMessageToast.show(\"Changes copied to clipboard!\");\n\t\t\t} else {\n\t\t\t\t// Fallback for older browsers\n\t\t\t\tconst dummyInput = document.createElement(\"textarea\");\n\t\t\t\tdocument.body.appendChild(dummyInput);\n\t\t\t\tdummyInput.value = output;\n\t\t\t\tdummyInput.select();\n\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\tdocument.body.removeChild(dummyInput);\n\t\t\t\tMessageToast.show(\"Changes copied to clipboard!\");\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Copy to clipboard failed:\", error);\n\t\t\tMessageToast.show(\"Failed to copy changes.\");\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;QACOA,cAAc,GAAAC,sBAAA,CAAAC,gBAAA;EAqBrB;AACA;AACA;EAFA,MAGqBC,IAAI,GAASH,cAAc,CAAAI,MAAA;IAAAC,WAAA,WAAAA,YAAA;MAAAL,cAAA,CAAAM,SAAA,CAAAD,WAAA,CAAAE,KAAA,OAAAC,SAAA;MAAA,KAG/CC,OAAO,GAAW,QAAQ;MAAA,KAK1BC,gBAAgB,GAAY,KAAK;MAAA,KACjCC,iBAAiB,GAAY,KAAK;MAMlC;MAAA,KACQC,eAAe,GAAiC,MAAM;IAAA;IAEjDC,MAAM,iBAAAC,QAAA,EAAS;MAC3B,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAAC;MACvC,IAAI,CAACD,OAAO,CAAC,CAAC,CAACE,OAAO,CAAC,IAAI,CAAC;MAC5B,IAAI,CAACC,SAAS,CAAC,CAAC,CACdC,QAAQ,CAAC,MAAM,CAAC,CAChBC,eAAe,CAAC,gBAAgB,EAAE,IAAI,CAACC,oBAAoB,EAAE,IAAI,CAAC;MACpE,IAAI,CAACN,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAIC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;MACnD,IAAI,CAACR,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAIC,SAAS,CAAC,CAAC,EAAE,aAAa,CAAC;MACvD,IAAI,CAACR,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAIC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC;MACrD,IAAI,CAACR,OAAO,CAAC,CAAC,CAACE,OAAO,CAAC,KAAK,CAAC;MAC7B,IAAI,CAACL,eAAe,GAAG,MAAM;IAC9B,CAAC;IAED;IACOY,cAAc,WAAAC,gBAACC,KAAU,EAAQ;MACvC,MAAMC,WAAW,GAAGD,KAAK,CAACE,SAAS,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;MACtD,IAAI,CAACjB,eAAe,GAAGe,WAAW;IACnC,CAAC;IAEDG,kBAAkB,WAAAC,oBAACtB,OAAe,EAAQ;MACzC,IAAI,IAAI,CAACuB,aAAa,IAAI,IAAI,CAACC,cAAc,KAAKxB,OAAO,EAAE;MAC3D,IAAIA,OAAO,KAAK,QAAQ,IAAI,CAAC,IAAI,CAACC,gBAAgB,EAAE;QACnD,IAAI,CAACuB,cAAc,GAAG,QAAQ;QAC9B,IAAI,CAACC,iBAAiB,GAAG,IAAI;QAC7B,IAAI,CAACC,WAAW,GAAG,IAAIZ,SAAS,CAAC,CAAC;QAClC,IAAI,CAACa,UAAU,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ,CAC1C,sBAAsB5B,OAAO,OAC9B,CAAC;QACD,IAAI,CAAC2B,UAAU,CAACE,IAAI,CAAC,MAAM;UAC1B,IAAI,CAACN,aAAa,GAAG,KAAK;QAC3B,CAAC,CAAC;QACF,IAAI,CAACjB,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACa,WAAW,EAAE,MAAM,CAAC;QACjD,IAAI,CAACI,iBAAiB,GAAG,IAAIhB,SAAS,CAAC,CAAC;QACxC,IAAI,CAACiB,gBAAgB,GAAG,IAAI,CAACD,iBAAiB,CAACF,QAAQ,CACtD,wBAAwB5B,OAAO,OAChC,CAAC;QACD,IAAI,CAACM,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACiB,iBAAiB,EAAE,QAAQ,CAAC;QACzD,IAAI,CAAC7B,gBAAgB,GAAG,IAAI;MAC7B;MACA,IAAID,OAAO,KAAK,QAAQ,IAAI,IAAI,CAACC,gBAAgB,EAAE;QAClD,IAAI,CAACK,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACa,WAAW,EAAE,MAAM,CAAC;QACjD,IAAI,CAACpB,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACiB,iBAAiB,EAAE,QAAQ,CAAC;MAC1D;MACA,IAAI9B,OAAO,KAAK,SAAS,IAAI,CAAC,IAAI,CAACE,iBAAiB,EAAE;QACrD,IAAI,CAACsB,cAAc,GAAG,SAAS;QAC/B,IAAI,CAACQ,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACC,YAAY,GAAG,IAAInB,SAAS,CAAC,CAAC;QACnC,IAAI,CAACa,UAAU,GAAG,IAAI,CAACM,YAAY,CAACL,QAAQ,CAC3C,sBAAsB5B,OAAO,OAC9B,CAAC;QACD,IAAI,CAACM,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACoB,YAAY,EAAE,MAAM,CAAC;QAClD,IAAI,CAACC,kBAAkB,GAAG,IAAIpB,SAAS,CAAC,CAAC;QACzC,IAAI,CAACiB,gBAAgB,GAAG,IAAI,CAACG,kBAAkB,CAACN,QAAQ,CACvD,wBAAwB5B,OAAO,OAChC,CAAC;QACD,IAAI,CAACM,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACqB,kBAAkB,EAAE,QAAQ,CAAC;QAC1D,IAAI,CAAChC,iBAAiB,GAAG,IAAI;MAC9B;MACA,IAAIF,OAAO,KAAK,SAAS,IAAI,IAAI,CAACE,iBAAiB,EAAE;QACpD,IAAI,CAACI,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACoB,YAAY,EAAE,MAAM,CAAC;QAClD,IAAI,CAAC3B,OAAO,CAAC,CAAC,CAACO,QAAQ,CAAC,IAAI,CAACqB,kBAAkB,EAAE,QAAQ,CAAC;MAC3D;MACA;MACA,IAAI,IAAI,CAACT,iBAAiB,IAAI,IAAI,CAACO,kBAAkB,EAAE;QACtDG,OAAO,CAACC,UAAU,CAAC,CAAC,IAAI,CAACT,UAAU,EAAE,IAAI,CAACI,gBAAgB,CAAC,CAAC,CAACF,IAAI,CAAC,MAAM;UACvE,IAAI7B,OAAO,KAAK,QAAQ,EAAE;YACzB,IAAI,CAACyB,iBAAiB,GAAG,KAAK;UAC/B,CAAC,MAAM;YACN,IAAI,CAACO,kBAAkB,GAAG,KAAK;UAChC;QACD,CAAC,CAAC;MACH;IACD,CAAC;IAEDpB,oBAAoB,WAAAyB,sBAAA,EAAS;MAC5B,IAAI,CAAC5B,SAAS,CAAC,CAAC,CACdC,QAAQ,CAAC,MAAM,CAAC,CAChB4B,oBAAoB,CAAC,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;MACnD,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACzB,CAAC;IAEDD,gBAAgB,WAAAE,kBAAA,EAAS;MACxB,IAAI,CAACD,iBAAiB,CAAC,CAAC;IACzB,CAAC;IAEYA,iBAAiB,iBAAAE,mBAAA,EAAkB;MAC/C,MAAMC,OAAO,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAC3D,MAAMC,WAAW,GAAGL,OAAO,CAACM,GAAG,CAAC,aAAa,CAAC;MAC9C,MAAMC,SAAS,GAAGP,OAAO,CAACM,GAAG,CAAC,WAAW,CAAC;MAC1C,MAAME,OAAO,GAAGR,OAAO,CAACM,GAAG,CAAC,SAAS,CAAC;MACtC,IAAIE,OAAO,EAAE;QACZ,IAAI,CAACnD,OAAO,GAAGmD,OAAO;MACvB;MACA,IAAI,CAAC9B,kBAAkB,CAAC,IAAI,CAACrB,OAAO,CAAC;MACrC,MAAMmC,OAAO,CAACiB,GAAG,CAAC,CAAC,IAAI,CAACzB,UAAU,EAAE,IAAI,CAACI,gBAAgB,CAAC,CAAC;MAC3D,MAAMsB,IAAI,GAAG,IAAI,CAAC/C,OAAO,CAAC,CAAC,CAACgD,QAAQ,CAAC,QAAQ,CAAC,CAACC,OAAO,CAAC,CAAC;;MAExD;MACA,IAAIP,WAAW,KAAK,IAAI,IAAIE,SAAS,KAAK,IAAI,EAAE;;MAEhD;MACA,MAAMM,kBAAkB,GAAIC,aAAqB,IAAoB;QACpE,MAAMC,QAAQ,GAAGL,IAAI,CAACM,GAAG,CAAEC,IAAS,IAAKA,IAAI,CAACC,GAAG,IAAID,IAAI,CAACE,KAAK,CAAC;QAChE;QACAJ,QAAQ,CAACK,IAAI,CAAC,CAACC,CAAS,EAAEC,CAAS,KAAK,IAAI,CAACC,kBAAkB,CAACF,CAAC,EAAEC,CAAC,CAAC,CAAC;;QAEtE;QACA,MAAM,CAACE,KAAK,EAAEC,KAAK,CAAC,GAAGX,aAAa,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3D,MAAMC,UAAU,GAAG,GAAGJ,KAAK,IAAIC,KAAK,EAAE;;QAEtC;QACA,MAAMI,kBAAkB,GAAGd,QAAQ,CAACe,MAAM,CAAEC,CAAS,IACpDA,CAAC,CAACC,UAAU,CAACJ,UAAU,CACxB,CAAC;QACD,OACCC,kBAAkB,CAACI,IAAI,CACrBF,CAAS,IAAK,IAAI,CAACG,cAAc,CAACH,CAAC,EAAEjB,aAAa,CAAC,IAAI,CACzD,CAAC,IAAI,IAAI;MAEX,CAAC;MAED,IAAIqB,gBAAgB,GAAG9B,WAAW;MAClC,IAAI+B,cAAc,GAAG7B,SAAS;MAC9B,MAAM8B,gBAAgB,GAAG,EAAE;MAE3B,IAAI,CAAChC,WAAW,EAAE;QACjBgC,gBAAgB,CAACC,IAAI,CAAC,6BAA6B,CAAC;MACrD,CAAC,MAAM,IACN,CAAC5B,IAAI,CAAC6B,IAAI,CACRtB,IAAS,IAAKA,IAAI,CAACC,GAAG,KAAKb,WAAW,IAAIY,IAAI,CAACE,KAAK,KAAKd,WAC3D,CAAC,EACA;QACD,MAAMmC,OAAO,GAAG3B,kBAAkB,CAACR,WAAW,CAAC;QAC/C,IAAImC,OAAO,EAAE;UACZL,gBAAgB,GAAGK,OAAO;UAC1BC,YAAY,CAACC,IAAI,CAChB,mCAAmCF,OAAO,kBAC3C,CAAC;QACF,CAAC,MAAM;UACNH,gBAAgB,CAACC,IAAI,CAAC,eAAejC,WAAW,eAAe,CAAC;QACjE;MACD;MAEA,IAAI,CAACE,SAAS,EAAE;QACf8B,gBAAgB,CAACC,IAAI,CAAC,2BAA2B,CAAC;MACnD,CAAC,MAAM,IACN,CAAC5B,IAAI,CAAC6B,IAAI,CACRtB,IAAS,IAAKA,IAAI,CAACC,GAAG,KAAKX,SAAS,IAAIU,IAAI,CAACE,KAAK,KAAKZ,SACzD,CAAC,EACA;QACD,MAAMiC,OAAO,GAAG3B,kBAAkB,CAACN,SAAS,CAAC;QAC7C,IAAIiC,OAAO,EAAE;UACZJ,cAAc,GAAGI,OAAO;UACxBC,YAAY,CAACC,IAAI,CAChB,mCAAmCF,OAAO,gBAC3C,CAAC;QACF,CAAC,MAAM;UACNH,gBAAgB,CAACC,IAAI,CAAC,aAAa/B,SAAS,eAAe,CAAC;QAC7D;MACD;MAEA,IAAI8B,gBAAgB,CAACM,MAAM,GAAG,CAAC,EAAE;QAChCF,YAAY,CAACC,IAAI,CAACL,gBAAgB,CAACO,IAAI,CAAC,OAAO,CAAC,CAAC;MAClD,CAAC,MAAM;QACN,IAAI,CAACjF,OAAO,CAAC,CAAC,CACZkF,IAAI,CAAC,mBAAmB,CAAC,CACzBC,cAAc,CAACX,gBAAiB,CAAC;QACnC,IAAI,CAACxE,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,iBAAiB,CAAC,CAACC,cAAc,CAACV,cAAe,CAAC;QACtE,IAAI,CAACzE,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,oBAAoB,CAAC,CAACC,cAAc,CAACtC,OAAQ,CAAC;QAClE,IAAI,CAACuC,mBAAmB,CAAC,CAAC;MAC3B;IACD,CAAC;IAEYA,mBAAmB,iBAAAC,qBAAA,EAAkB;MACjD,IAAI,CAACrF,OAAO,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC,CAAC;MACvC,IAAI,CAACD,OAAO,CAAC,CAAC,CAACE,OAAO,CAAC,IAAI,CAAC;MAC5B,IAAI,CAACR,OAAO,GAAG,IAAI,CAACM,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,oBAAoB,CAAC,CAACpE,cAAc,CAAC,CAAC;MACzE,IAAI,CAACC,kBAAkB,CAAC,IAAI,CAACrB,OAAO,CAAC;MACrC,MAAMmC,OAAO,CAACiB,GAAG,CAAC,CAAC,IAAI,CAACzB,UAAU,EAAE,IAAI,CAACI,gBAAgB,CAAC,CAAC;MAC3D,IAAI,CAAC6D,mBAAmB,CAAC,CAAC;MAC1B,MAAM5C,WAAW,GAAG,IAAI,CAAC1C,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,mBAAmB,CAAC,CAACpE,cAAc,CAAC,CAAC;MAC7E,MAAM8B,SAAS,GAAG,IAAI,CAAC5C,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,iBAAiB,CAAC,CAACpE,cAAc,CAAC,CAAC;MACzE,MAAMyE,aAAa,GAAG,IAAI,CAACC,eAAe,CAAC9C,WAAW,EAAEE,SAAS,CAAC;MAClE,MAAM6C,SAAS,GAAG,IAAI,CAACzF,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,iBAAiB,CAAC,CAACpE,cAAc,CAAC,CAAC;MACzE,IAAI4B,WAAW,IAAIE,SAAS,EAAE;QAC7B,MAAM8C,OAAO,GAAG,IAAI,CAACC,+BAA+B,CACnDJ,aAAa,CAAC7C,WAAW,EACzB6C,aAAa,CAAC3C,SAAS,EACvB6C,SACD,CAAC;QACD,IAAI,CAACzF,OAAO,CAAC,CAAC,CAACgD,QAAQ,CAAC,SAAS,CAAC,CAAC4C,OAAO,CAACF,OAAO,CAAC;MACpD;MACA,IAAI,CAAC1F,OAAO,CAAC,CAAC,CAACE,OAAO,CAAC,KAAK,CAAC;IAC9B,CAAC;IAEM2F,QAAQ,WAAAC,UAAA,EAAS;MACvBC,UAAU,CAAChB,IAAI,CAAC,cAAc,CAAC;IAChC,CAAC;IAEDR,cAAc,WAAAyB,gBAACC,EAAU,EAAEC,EAAU,EAAU;MAC9C,MAAMC,MAAM,GAAGF,EAAE,CAAClC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC+C,MAAM,CAAC;MACxC,MAAMC,MAAM,GAAGH,EAAE,CAACnC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC+C,MAAM,CAAC;MAExC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACnB,MAAM,IAAIsB,CAAC,GAAGD,MAAM,CAACrB,MAAM,EAAEsB,CAAC,EAAE,EAAE;QAC5D,IAAIH,MAAM,CAACG,CAAC,CAAC,GAAGD,MAAM,CAACC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACpC,IAAIH,MAAM,CAACG,CAAC,CAAC,GAAGD,MAAM,CAACC,CAAC,CAAC,EAAE,OAAO,CAAC;MACpC;MAEA,OAAOH,MAAM,CAACnB,MAAM,GAAGqB,MAAM,CAACrB,MAAM;IACrC,CAAC;IAEDuB,WAAW,WAAAC,aAACd,OAAiB,EAAY;MACxC,MAAMe,MAAM,GAAG,IAAI,CAACzG,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,qBAAqB,CAAC,CAACpE,cAAc,CAAC,CAAC;MAC1E,OAAO4E,OAAO,CAACjC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC7B,IAAI8C,MAAM,KAAK,MAAM,EAAE;UACtB,IAAI/C,CAAC,CAACgD,IAAI,KAAK,YAAY,IAAI/C,CAAC,CAAC+C,IAAI,KAAK,YAAY,EAAE;YACvD,OAAO,CAAC,CAAC;UACV,CAAC,MAAM,IAAIhD,CAAC,CAACgD,IAAI,KAAK,YAAY,IAAI/C,CAAC,CAAC+C,IAAI,KAAK,YAAY,EAAE;YAC9D,OAAO,CAAC;UACT,CAAC,MAAM,IAAIhD,CAAC,CAACgD,IAAI,KAAK,SAAS,IAAI/C,CAAC,CAAC+C,IAAI,KAAK,SAAS,EAAE;YACxD,OAAO,CAAC,CAAC;UACV,CAAC,MAAM,IAAIhD,CAAC,CAACgD,IAAI,KAAK,SAAS,IAAI/C,CAAC,CAAC+C,IAAI,KAAK,SAAS,EAAE;YACxD,OAAO,CAAC;UACT,CAAC,MAAM;YACN;YACA,IAAI,CAAChD,CAAC,CAACiD,IAAI,IAAI,CAAChD,CAAC,CAACgD,IAAI,EAAE;cACvBC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEnD,CAAC,EAAEC,CAAC,CAAC;cACtD,OAAO,CAAC;YACT;YACA,OAAOD,CAAC,CAACiD,IAAI,CAACG,aAAa,CAACnD,CAAC,CAACgD,IAAI,CAAC;UACpC;QACD,CAAC,MAAM,IAAIF,MAAM,KAAK,MAAM,EAAE;UAC7B,IAAI,CAAC/C,CAAC,CAACiD,IAAI,IAAI,CAAChD,CAAC,CAACgD,IAAI,EAAE;YACvBC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEnD,CAAC,EAAEC,CAAC,CAAC;YACtD,OAAO,CAAC;UACT;UACA,OAAOD,CAAC,CAACiD,IAAI,CAACG,aAAa,CAACnD,CAAC,CAACgD,IAAI,CAAC;QACpC,CAAC,MAAM;UACN;UACA,IAAI,CAACjD,CAAC,CAACqD,OAAO,IAAI,CAACpD,CAAC,CAACoD,OAAO,EAAE;YAC7BH,OAAO,CAACC,IAAI,CAAC,qCAAqC,EAAEnD,CAAC,EAAEC,CAAC,CAAC;YACzD,OAAO,CAAC;UACT;UACA,OAAO,IAAI,CAACC,kBAAkB,CAACF,CAAC,CAACqD,OAAO,EAAEpD,CAAC,CAACoD,OAAO,CAAC;QACrD;MACD,CAAC,CAAC;IACH,CAAC;IAEDC,cAAc,WAAAC,gBAAC7D,QAAmB,EAAa;MAC9C,MAAM8D,UAAiC,GAAG,IAAIC,GAAG,CAAC,CAAC;MAEnD,KAAK,MAAMJ,OAAO,IAAI3D,QAAQ,EAAE;QAC/B,KAAK,MAAMgE,GAAG,IAAIL,OAAO,CAACM,SAAS,EAAE;UACpC,MAAMC,kBAAkB,GAAGF,GAAG,CAAC1B,OAAO,CAACrC,GAAG,CAAEkE,MAAM,KAAM;YACvD,GAAGA,MAAM;YACTR,OAAO,EAAEA,OAAO,CAACA;UAClB,CAAC,CAAC,CAAC;UAEH,MAAMS,eAAe,GAAGN,UAAU,CAACvE,GAAG,CAACyE,GAAG,CAACK,OAAO,CAAC,IAAI,EAAE;UACzDP,UAAU,CAACQ,GAAG,CAACN,GAAG,CAACK,OAAO,EAAED,eAAe,CAACG,MAAM,CAACL,kBAAkB,CAAC,CAAC;QACxE;MACD;MAEA,OAAOM,KAAK,CAACC,IAAI,CAACX,UAAU,CAACY,OAAO,CAAC,CAAC,CAAC,CACrCzE,GAAG,CAAC0E,IAAA,IAAwB;QAAA,IAAvB,CAACN,OAAO,EAAE/B,OAAO,CAAC,GAAAqC,IAAA;QACvB,MAAMC,aAAuB,GAAG,EAAE;QAClC,MAAMC,WAAW,GAAG,IAAIC,GAAG,CAAS,CAAC;QAErC,KAAK,MAAMX,MAAM,IAAI,IAAI,CAAChB,WAAW,CAACb,OAAO,CAAC,EAAE;UAC/C;UACA,MAAMyC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAAC;YACnC3B,IAAI,EAAEa,MAAM,CAACb,IAAI;YACjBC,IAAI,EAAEY,MAAM,CAACZ,IAAI;YACjB2B,GAAG,EAAEf,MAAM,CAACgB;YACZ;UACD,CAAC,CAAC;UAEF,IAAI,CAACN,WAAW,CAACO,GAAG,CAACL,YAAY,CAAC,EAAE;YACnCF,WAAW,CAACQ,GAAG,CAACN,YAAY,CAAC;YAC7BH,aAAa,CAACrD,IAAI,CAAC4C,MAAM,CAAC;UAC3B;QACD;QAEA,OAAO;UACNE,OAAO;UACP/B,OAAO,EAAEsC;QACV,CAAC;MACF,CAAC,CAAC,CACDvE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACf,IAAID,CAAC,CAAC+D,OAAO,KAAK,YAAY,EAAE;UAC/B,OAAO,CAAC,CAAC;QACV,CAAC,MAAM,IAAI9D,CAAC,CAAC8D,OAAO,KAAK,YAAY,EAAE;UACtC,OAAO,CAAC;QACT,CAAC,MAAM;UACN,OAAO/D,CAAC,CAAC+D,OAAO,CAACX,aAAa,CAACnD,CAAC,CAAC8D,OAAO,CAAC,CAAC,CAAC;QAC5C;MACD,CAAC,CAAC;IACJ,CAAC;IAED9B,+BAA+B,WAAA+C,iCAC9BC,YAAoB,EACpBC,UAAkB,EAClBC,UAAqC,EACzB;MACZ,MAAM9F,IAAI,GAAG,IAAI,CAAC/C,OAAO,CAAC,CAAC,CAACgD,QAAQ,CAAC,MAAM,CAAC,CAACC,OAAO,CAAC,CAAC;MACtD,MAAM6F,eAAe,GAAG/F,IAAI,CAACoB,MAAM,CACjC4E,GAAY,IACZ,IAAI,CAACxE,cAAc,CAACwE,GAAG,CAAChC,OAAO,EAAE4B,YAAY,CAAC,GAAG,CAAC,IAClD,IAAI,CAACpE,cAAc,CAACwE,GAAG,CAAChC,OAAO,EAAE6B,UAAU,CAAC,IAAI,CAClD,CAAC;MAED,MAAMI,eAAe,GAAG,IAAI,CAAChC,cAAc,CAAC8B,eAAe,CAAC;MAE5D,IAAID,UAAU,KAAK,KAAK,EAAE;QACzB,OAAOG,eAAe;MACvB;;MAEA;MACA,OAAOA,eAAe,CACpB3F,GAAG,CAAE+D,GAAG,IAAK;QACb,MAAM6B,eAAe,GAAG7B,GAAG,CAAC1B,OAAO,CAACvB,MAAM,CACxCoD,MAAM,IAAKA,MAAM,CAACb,IAAI,KAAKmC,UAC7B,CAAC;QACD,OAAO;UACNpB,OAAO,EAAEL,GAAG,CAACK,OAAO;UACpB/B,OAAO,EAAEuD;QACV,CAAC;MACF,CAAC,CAAC,CACD9E,MAAM,CAAEiD,GAAG,IAAKA,GAAG,CAAC1B,OAAO,CAACV,MAAM,GAAG,CAAC,CAAC;IAC1C,CAAC;IAEDQ,eAAe,WAAA0D,iBAACjD,EAAU,EAAEC,EAAU,EAA8C;MACnF,MAAMiD,OAAO,GAAGlD,EAAE,CAAClC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC+C,MAAM,CAAC;MACzC,MAAMgD,OAAO,GAAGlD,EAAE,CAACnC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC+C,MAAM,CAAC;MAEzC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,OAAO,CAACnE,MAAM,EAAEsB,CAAC,EAAE,EAAE;QACxC,IAAI6C,OAAO,CAAC7C,CAAC,CAAC,GAAG8C,OAAO,CAAC9C,CAAC,CAAC,EAAE;UAC5B,OAAO;YACN5D,WAAW,EAAEwD,EAAE;YACftD,SAAS,EAAEqD;UACZ,CAAC;QACF,CAAC,MAAM,IAAIkD,OAAO,CAAC7C,CAAC,CAAC,GAAG8C,OAAO,CAAC9C,CAAC,CAAC,EAAE;UACnC,OAAO;YACN5D,WAAW,EAAEuD,EAAE;YACfrD,SAAS,EAAEsD;UACZ,CAAC;QACF;MACD;;MAEA;MACA,OAAO;QACNxD,WAAW,EAAEuD,EAAE;QACfrD,SAAS,EAAEsD;MACZ,CAAC;IACF,CAAC;IAEDtC,kBAAkB,WAAAyF,oBAACpD,EAAU,EAAEC,EAAU,EAAU;MAClD,MAAMC,MAAM,GAAGF,EAAE,CAAClC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC+C,MAAM,CAAC;MACxC,MAAMC,MAAM,GAAGH,EAAE,CAACnC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC+C,MAAM,CAAC;MAExC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACnB,MAAM,IAAIsB,CAAC,GAAGD,MAAM,CAACrB,MAAM,EAAEsB,CAAC,EAAE,EAAE;QAC5D,IAAIH,MAAM,CAACG,CAAC,CAAC,GAAGD,MAAM,CAACC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QACpC,IAAIH,MAAM,CAACG,CAAC,CAAC,GAAGD,MAAM,CAACC,CAAC,CAAC,EAAE,OAAO,CAAC;MACpC;MAEA,OAAOD,MAAM,CAACrB,MAAM,GAAGmB,MAAM,CAACnB,MAAM;IACrC,CAAC;IAEDsE,eAAe,WAAAC,iBAAA,EAAS;MACvB,IAAI,CAACpJ,SAAS,CAAC,CAAC,CAACqJ,KAAK,CAAC,UAAU,CAAC;IACnC,CAAC;IAEMlE,mBAAmB,WAAAmE,qBAAA,EAAS;MAClC,MAAM7G,SAAS,GAAG,IAAI,CAAC5C,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,iBAAiB,CAAC,CAACpE,cAAc,CAAC,CAAC;MACzE,MAAM4B,WAAW,GAAG,IAAI,CAAC1C,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,mBAAmB,CAAC,CAACpE,cAAc,CAAC,CAAC;MAC7E,MAAM+B,OAAO,GAAG,IAAI,CAAC7C,OAAO,CAAC,CAAC,CAACkF,IAAI,CAAC,oBAAoB,CAAC,CAACpE,cAAc,CAAC,CAAC;MAC1E,MAAMuB,OAAO,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;MAE3D,IAAIG,SAAS,EAAE;QACdP,OAAO,CAACqF,GAAG,CAAC,WAAW,EAAE9E,SAAS,CAAC;MACpC,CAAC,MAAM;QACNP,OAAO,CAACqH,MAAM,CAAC,WAAW,CAAC;MAC5B;MAEA,IAAIhH,WAAW,EAAE;QAChBL,OAAO,CAACqF,GAAG,CAAC,aAAa,EAAEhF,WAAW,CAAC;MACxC,CAAC,MAAM;QACNL,OAAO,CAACqH,MAAM,CAAC,aAAa,CAAC;MAC9B;MACArH,OAAO,CAACqF,GAAG,CAAC,SAAS,EAAE7E,OAAO,CAAC;MAE/B,MAAM8G,MAAM,GAAG,GAAGpH,MAAM,CAACC,QAAQ,CAACoH,MAAM,GAAGrH,MAAM,CAACC,QAAQ,CAACqH,QAAQ,IAAIxH,OAAO,CAACyH,QAAQ,CAAC,CAAC,EAAE;MAC3FvH,MAAM,CAACwH,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAEL,MAAM,CAAC;IACzC,CAAC;IAEDM,uBAAuB,WAAAC,yBAACvJ,KAAY,EAAQ;MAC3C,IAAI,CAACwJ,mBAAmB,CAACxJ,KAAK,CAAC;IAChC,CAAC;IAEDyJ,iBAAiB,WAAAC,kBAAA,EAAS;MACzB9H,MAAM,CAAC+H,IAAI,CAAC,qBAAqB,CAAC;IACnC,CAAC;IAEDC,kBAAkB,WAAAC,mBAAA,EAAS;MAC1BjI,MAAM,CAAC+H,IAAI,CAAC,sBAAsB,CAAC;IACpC,CAAC;IAEDG,cAAc,WAAAC,gBAAA,EAAS;MACtBnI,MAAM,CAAC+H,IAAI,CAAC,2CAA2C,CAAC;IACzD,CAAC;IAED;IACaK,uBAAuB,iBAAAC,yBAACjK,KAAY,EAAiB;MACjE;MACA,MAAMkK,WAAW,GAAG,IAAI,CAAC7K,OAAO,CAAC,CAAC,CAACgD,QAAQ,CAAC,SAAS,CAAC,CAACC,OAAO,CAAC,CAAC;;MAEhE;MACA,IAAI,CAAC2E,KAAK,CAACkD,OAAO,CAACD,WAAW,CAAC,IAAIA,WAAW,CAAC7F,MAAM,KAAK,CAAC,EAAE;QAC5DF,YAAY,CAACC,IAAI,CAAC,+BAA+B,CAAC;QAClD;MACD;MAEA,IAAIgG,MAAM,GAAG,EAAE;MAEf,IAAI,IAAI,CAAClL,eAAe,KAAK,MAAM,EAAE;QACpC;QACAkL,MAAM,GAAG3C,IAAI,CAACC,SAAS,CAACwC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;MAC9C,CAAC,MAAM,IAAI,IAAI,CAAChL,eAAe,KAAK,UAAU,EAAE;QAC/C;QACAgL,WAAW,CAACG,OAAO,CAAEC,UAAmB,IAAK;UAC5CF,MAAM,IAAI,MAAME,UAAU,CAACxD,OAAO,IAAI;UACtCwD,UAAU,CAACvF,OAAO,CAACsF,OAAO,CAAEzD,MAAM,IAAK;YACtC,MAAM2D,UAAU,GAAG3D,MAAM,CAACgB,UAAU,GAAG,aAAahB,MAAM,CAACgB,UAAU,IAAI,GAAG,EAAE;YAC9EwC,MAAM,IAAI,kBAAkBxD,MAAM,CAACR,OAAO,IAAI,KAAK;AACxD,YAAYQ,MAAM,CAACb,IAAI;AACvB,YAAYa,MAAM,CAACZ,IAAI,IAAIuE,UAAU,MAAM;UACvC,CAAC,CAAC;QACH,CAAC,CAAC;MACH,CAAC,MAAM;QACN;QACAL,WAAW,CAACG,OAAO,CAAEC,UAAmB,IAAK;UAC5CF,MAAM,IAAI,GAAGE,UAAU,CAACxD,OAAO,IAAI;UACnCwD,UAAU,CAACvF,OAAO,CAACsF,OAAO,CAAEzD,MAAM,IAAK;YACtC,MAAM2D,UAAU,GAAG3D,MAAM,CAACgB,UAAU,GAAG,aAAahB,MAAM,CAACgB,UAAU,GAAG,GAAG,EAAE;YAC7EwC,MAAM,IAAI,YAAYxD,MAAM,CAACR,OAAO,IAAI,KAAK,WAAWQ,MAAM,CAACb,IAAI,WAAWa,MAAM,CAACZ,IAAI,GAAGuE,UAAU,IAAI;UAC3G,CAAC,CAAC;UACFH,MAAM,IAAI,IAAI;QACf,CAAC,CAAC;MACH;MAEA,IAAI;QACH,IAAI,WAAW,IAAII,SAAS,EAAE;UAC7B,MAAMA,SAAS,CAACC,SAAS,CAACC,SAAS,CAACN,MAAM,CAAC;UAC3CjG,YAAY,CAACC,IAAI,CAAC,8BAA8B,CAAC;QAClD,CAAC,MAAM;UACN;UACA,MAAMuG,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;UACrDD,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACJ,UAAU,CAAC;UACrCA,UAAU,CAAC9H,KAAK,GAAGuH,MAAM;UACzBO,UAAU,CAACK,MAAM,CAAC,CAAC;UACnBJ,QAAQ,CAACK,WAAW,CAAC,MAAM,CAAC;UAC5BL,QAAQ,CAACE,IAAI,CAACI,WAAW,CAACP,UAAU,CAAC;UACrCxG,YAAY,CAACC,IAAI,CAAC,8BAA8B,CAAC;QAClD;MACD,CAAC,CAAC,OAAO+G,KAAK,EAAE;QACflF,OAAO,CAACkF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDhH,YAAY,CAACC,IAAI,CAAC,yBAAyB,CAAC;MAC7C;IACD;EAAC;EAAA,OAtemB3F,IAAI;AAAA","ignoreList":[]}